[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"BS4 output FLAC3D Gitbook R Markdown, using bookdown R package.\npurpose extend capability organizing codes learnt FLAC3D Manual.\nPDF file, download cover image.\nWord file, click download.Kyeong Sun Kim\nSeptember 2021\nSeoul National University","code":""},{"path":"kaist-model.html","id":"kaist-model","chapter":"1 KAIST Model","heading":"1 KAIST Model","text":"","code":""},{"path":"kaist-model.html","id":"initial-configuration","chapter":"1 KAIST Model","heading":"1.1 Initial Configuration","text":"","code":"import itasca as it\nimport numpy as np\nnp.set_printoptions(threshold=20)\nit.command(\"python-reset-state false\")\nfrom itasca import zonearray as za\nfrom itasca import gridpointarray as gpa\n\n# PARAMETERS #\n\n# Physical Constants\n_gravity = 9.80665\n_K = 0.4286\n\n# Dimensions\n_D_shaft = 1\n_H_shaft = 7.45\n_T_plate = 1.5\n_B_footing = 3.25\n_D_footing = _H_shaft + _T_plate\n_B_soil = _B_footing*5\n_D_soil = _D_footing+3\n\n# Mesh Details\n_radial = 50\n_perimeter = _radial\n_axial = 2*_radial\n_outer = 2*_radial\n\n# Concrete Properties\n_bulk = 13.9e9\n_shear = 10.4e9\n_density_concrete = 2950\n\n# Soil Properties\n_E_o = 1e7\n_const = 1e8\n_poisson = 0.25\n_density_soil = 1530\n\n# Interface Properties\n_stiff_norm = 1e8\n_stiff_shear = 1e8"},{"path":"kaist-model.html","id":"zones","chapter":"1 KAIST Model","heading":"1.2 Zones","text":"","code":"# ZONE #\n\nit.command(\"\"\"\n; ==================================================================\n;   Simulation of Pull-out for Shallow Foundation\n; ==================================================================\nmodel new\nfish automatic-create off\n[global t =  'Pull-out for Spread Foundation ']\n[t += {name}]\nmodel title [t]\n\"\"\".format(name=\"(B=6.5m, D=7.45m, Dr=78%)\"))\n\ncommand_zone = \"\"\"\nmodel new\nz crea r-t p 0 (0,0,0) ...\n           p 1 ({B_soil},0,0) ... \n           p 2 (0,{D_soil},0) ...\n           p 3 (0,0,{B_soil}) ...\n           p 4 ({B_soil},{D_soil},0) ...\n           p 5 (0,{D_soil},{B_soil}) ...\n           p 6 ({B_soil},0,{B_soil}) ...\n           p 7 ({B_soil},{D_soil},{B_soil}) ...\n           p 8 ({B_footing},0,0) ...\n           p 9 (0,0,{B_footing}) ...\n           p 10 ({B_footing},{D_soil},0) ...\n           p 11 (0,{D_soil},{B_footing}) ...\n           p 12 ({B_footing},0,{B_footing}) ...\n           p 13 ({B_footing},{D_soil},{B_footing}) ...\n           size {radial} {axial} {perimeter} {outer} ...\n           rat 1 1 1 1.01 ...\n           fill\n\"\"\"\n\ncommand = command_zone.format(\nB_footing = _B_footing,\nB_soil = _B_soil,\nD_soil = _D_soil,\nradial=_radial,\naxial = _axial,\nperimeter = _perimeter,\nouter = _outer)\n\nit.command(command)"},{"path":"kaist-model.html","id":"constitutive-model","chapter":"1 KAIST Model","heading":"1.3 Constitutive Model","text":"Besides standard looping depicted , one can easily loop \nsets model objects (.e., zones, gridpoints, structural element\nnodes, etc.) using loop foreach construct. case, container\nobjects must given FISH intrinsic zone.list. \npractical use loop foreach construct install nonlinear\ninitial distribution elastic moduli FLAC3D grid. Suppose \nYoung’s modulus site given equation:\\[ E = E_0 + c \\sqrt{z}  \\] z depth surface, c\nE∘ constants. write FISH function install appropriate\nvalues bulk shear modulus grid, example:, can verify correct operation function printing \nplotting shear bulk moduli.function install, loop takes place zones \nglobal list zones. FISH statement loop foreach variation \nloop statement sets pnt zone zone.list. Inside \nloop, z-coordinate zone centroid used calculate \nYoung’s modulus, given equation . assume datum\n(ground surface reference point) z = 0. variables\nzone.pos.z(pnt) zone.prop(pnt, ‘young’) zone intrinsics. (Recall\ntalked gridpoint intrinsic gp.force.unbal earlier.)\n, set properties directly within FISH function, rather\nzone property command earlier example.","code":"# CONSTITUTIVE MODEL\nit.command(\"\"\"\nzone cmodel assign elastic range group \"Radial Tunnel1\"\n\nfish define fname(E_o,const)\nloop foreach pnt zone.list\nz_depth = zone.pos.y(pnt)\nE = E_o+const*math.sqrt(z_depth)\nzone.prop(pnt,'young')=E\nend_loop\nend\n@fname({E_o_},{const_})\nzone property poisson {poisson_} density {density_soil}\nplot item create zone contour property name 'young'\nplot item create zone contour property name 'density'\n\"\"\".format(E_o_=_E_o,const_=_const,poisson_=_poisson,density_soil=_density_soil))\n\n# GROUP #\n\np = za.pos()\nx,y,z = p.T\nprint(it.zone.count(), \"zones in whole model\")\n\nshaft = reduce(np.logical_and, (np.sqrt(x**2+z**2)<_D_shaft, y<_H_shaft))\nza.set_group(shaft, \"shaft\") # set the zones with shaft = true have \"shaft\" and \"geometry\"\nprint(za.in_group(\"shaft\").sum(), \"zones in shaft group.\") #output how many zones are in the corner group\n\nplate = reduce(np.logical_and, (x<_B_footing,z<_B_footing, y>_H_shaft,y<_D_footing))\nza.set_group(plate, \"plate\") \nprint(za.in_group(\"plate\").sum(), \"zones in plate group.\") \n\nit.command(\"\"\"\nzone cmodel assign elastic range group 'shaft'\nzone cmodel assign elastic range group 'plate'\nzone property bulk {bulk_} shear {shear_} density {density_} range group 'shaft'\nzone property bulk {bulk_} shear {shear_} density {density_} range group 'plate'\n\"\"\".format(bulk_=_bulk,shear_=_shear,density_=_density_concrete))# SOFTENING MODEL #\n#it.command(\"\"\"\n#zone cmodel assign strain-softening range group \"Radial Tunnel1\"\n#zone property density 2500 bulk 2e8 shear 1e8 range group \"Radial Tunnel1\"\n#zone property cohesion 2e6 friction 45 tension 2e5 dilation 10 range group \"Radial Tunnel1\"\n#zone property table-friction 'fri' table-cohesion 'coh' table-dilation 'dil' range group \"Radial Tunnel1\"\n#table 'fri' add (0, 45) (.05, 42) (.1, 40) (1, 40)\n#table 'coh' add (0,2e6) (.05,1e6) (.1,5e5) (1,5e5) \n#table 'dil' add (0, 10) (.05,  3) (.1,  0)\n#\"\"\")"},{"path":"kaist-model.html","id":"soil-structure-interface","chapter":"1 KAIST Model","heading":"1.4 Soil-Structure Interface","text":"","code":"# INTERFACE #\n\nit.command(\"\"\"\nzone interface 'interface 1' create by-face separate range group 'plate' group 'Radial Tunnel1'\nzone interface 'interface 1' node property stiffness-normal {stiff_norm_} stiffness-shear {stiff_shear_} friction 20 cohesion 30000\n\nzone interface 'interface 2' create by-face separate range group 'shaft' group 'Radial Tunnel1'\nzone interface 'interface 2' node property stiffness-normal {stiff_norm_} stiffness-shear {stiff_shear_} friction 20 cohesion 30000\n\n\"\"\".format(stiff_norm_=_stiff_norm, stiff_shear_=_stiff_shear))"},{"path":"kaist-model.html","id":"boundary-conditions","chapter":"1 KAIST Model","heading":"1.5 Boundary Conditions","text":"","code":"bottom = (y ==np.amax(y))\nza.set_group(bottom, \"bottom\") \nprint(za.in_group(\"bottom\").sum(), \"zones in bottom group.\") \n\nup = (y == np.amin(y))\nza.set_group(up, \"up\") \nprint(za.in_group(\"up\").sum(), \"zones in up group.\") \n\nx_side = (z <= np.amin(z)+1e-4)\nza.set_group(x_side, \"x_side\") \nprint(za.in_group(\"x_side\").sum(), \"zones in x_side group.\") \n\nz_side = (x <= np.amin(x)+1e-4)\nza.set_group(z_side, \"z_side\") \nprint(za.in_group(\"z_side\").sum(), \"zones in z_side group.\") \n\nx_side_end = (z == np.amax(z))\nza.set_group(x_side_end, \"x_side_end\") \nprint(za.in_group(\"x_side_end\").sum(), \"zones in x_side_end group.\") \n\nz_side_end = (x == np.amax(x))\nza.set_group(z_side_end, \"z_side_end\") \nprint(za.in_group(\"z_side_end\").sum(), \"zones in z_side_end group.\") "},{"path":"kaist-model.html","id":"initial-equilibrium","chapter":"1 KAIST Model","heading":"1.6 Initial Equilibrium","text":"","code":"it.command(\"\"\"\nzone face apply velocity-normal 0 range group 'bottom'\nzone face apply velocity-normal 0 range group 'x_side' or 'z_side'\nzone face apply velocity-normal 0 range group 'x_side_end' or 'z_side_end'\n\nmodel gravity 0 {gravity_} 0\nzone initialize-stress ratio {K_}\nzone interface 'interface 1' node initialize-stresses\nzone interface 'interface 2' node initialize-stresses\n\"\"\".format(gravity_=_gravity, K_ = _K))\n\n# INITIAL EQUILIBRIUM #\n\nit.command(\"\"\"\nzone ratio local\nmodel solve ratio 1e-4\nmodel save 'initial'\n\"\"\")"},{"path":"kaist-model.html","id":"alterations","chapter":"1 KAIST Model","heading":"1.7 Alterations","text":"","code":""},{"path":"kaist-model.html","id":"results","chapter":"1 KAIST Model","heading":"1.8 Results","text":"","code":"; ==================================================================\n;   IPython Consol Output\n; ==================================================================\n(1250000, 'zones in whole model')\n(11346, 'zones in shaft group.')\n(32500, 'zones in plate group.')\n(12500, 'zones in bottom group.')\n(12500, 'zones in up group.')\n(5000, 'zones in x_side group.')\n(5000, 'zones in z_side group.')\n(5000, 'zones in x_side_end group.')\n(5000, 'zones in z_side_end group.')\n\n; ==================================================================\n;   FISH Consol Output\n; ==================================================================\nflac3d>@fname(10000000.0,100000000.0)\nflac3d>zone property poisson 0.25 density 1530\n--- Property poisson set in 1250000 zones using the elastic model.\nflac3d>plot item create zone contour property name 'young'\nflac3d>plot item create zone contour property name 'density'\nflac3d>zone cmodel assign elastic range group 'shaft'\nflac3d>zone cmodel assign elastic range group 'plate'\nflac3d>zone property bulk 13900000000.0 shear 10400000000.0 density 2950 range group 'shaft'\n--- Property bulk set in 11346 zones using the elastic model.\n--- Property shear set in 11346 zones using the elastic model.\nflac3d>zone property bulk 13900000000.0 shear 10400000000.0 density 2950 range group 'plate'\n--- Property bulk set in 32500 zones using the elastic model.\n--- Property shear set in 32500 zones using the elastic model.\nflac3d>zone interface 'interface 1' create by-face separate range group 'plate' group 'Radial Tunnel1'\n--- 6200 gridpoints duplicated, 12234 surface faces created.\n--- 31 gridpoints skipped on internal edge.\n--- 6117 faces on one side were assigned the group name Interface 1 in slot Interface.\nflac3d>zone interface 'interface 1' node property stiffness-normal 100000000.0 stiffness-shear 100000000.0 friction 20 cohesion 30000\n--- Property Normal Stiffness set in 6231 interface 1 nodes.\n--- Property Shear Stiffness set in 6231 interface 1 nodes.\n--- Property Friction set in 6231 interface 1 nodes.\n--- Property Cohesion set in 6231 interface 1 nodes.\nflac3d>zone interface 'interface 2' create by-face separate range group 'shaft' group 'Radial Tunnel1'\n--- 1953 gridpoints duplicated, 3720 surface faces created.\n--- 1860 faces on one side were assigned the group name Interface 2 in slot Interface.\nflac3d>zone interface 'interface 2' node property stiffness-normal 100000000.0 stiffness-shear 100000000.0 friction 20 cohesion 30000\n--- Property Normal Stiffness set in 1953 interface 2 nodes.\n--- Property Shear Stiffness set in 1953 interface 2 nodes.\n--- Property Friction set in 1953 interface 2 nodes.\n--- Property Cohesion set in 1953 interface 2 nodes.\nflac3d>zone face apply velocity-normal 0 range group 'bottom'\n--- Apply conditions added to 12701 gridpoints.\nflac3d>zone face apply velocity-normal 0 range group 'x_side' or 'z_side'\n--- 101 gridpoints with conflicting conditions had those conditions removed.\n--- Apply conditions added to 11308 gridpoints.\nflac3d>zone face apply velocity-normal 0 range group 'x_side_end' or 'z_side_end'\n--- 101 gridpoints with conflicting conditions had those conditions removed.\n--- Apply conditions added to 10601 gridpoints.\nflac3d>model gravity 0 9.80665 0\n--- Gravity has been set to: ( 0.000000e+00 9.806650e+00 0.000000e+00).\nflac3d>zone initialize-stress ratio 0.4286\n--- Stresses initialized in 1250000 zones.\nflac3d>zone interface 'interface 1' node initialize-stresses\n--- Initial stress state set in 6231 interface nodes.\nflac3d>zone interface 'interface 2' node initialize-stresses\n--- Initial stress state set in 1953 interface nodes."},{"path":"axial-concrete-pile.html","id":"axial-concrete-pile","chapter":"2 Axial Concrete Pile","heading":"2 Axial Concrete Pile","text":"","code":""},{"path":"axial-concrete-pile.html","id":"problem-description","chapter":"2 Axial Concrete Pile","heading":"2.1 Problem Description","text":"","code":""},{"path":"axial-concrete-pile.html","id":"problem-statement","chapter":"2 Axial Concrete Pile","heading":"2.1.1 Problem Statement","text":"pile subjected axial load 100 kN, top \npile moved horizontally displacement 4 cm.goal determine relation axial loading ultimate\nbearing capacity. , lateral load-deflection curve calculated.origin top pile, z upward.z=0: free surfacez=-8: fixed z-eirectionx=+8, -8, y = 8: rollerskin friction modeled placing interface pile\nconcrete wall clay. , fric angle 20 c=30kPa \nassumed.toe interface placed pile tip clay note: Zone faces\nseparated previous command gridpoints common \nseparated well.note: include Figure grid (geometry)","code":""},{"path":"axial-concrete-pile.html","id":"main-parameters","chapter":"2 Axial Concrete Pile","heading":"2.1.2 Main Parameters","text":"Diameter = 0.6 m\nLength = 5\nClay\nGWT = 5.5m","code":""},{"path":"axial-concrete-pile.html","id":"modeling-procedure","chapter":"2 Axial Concrete Pile","heading":"2.2 Modeling Procedure","text":"equil. stress state gravity load install.\n1-1) water table created z=5.5\n1-2) wet density clay assigned water table.equil. stress state gravity load install.\n1-1) water table created z=5.5\n1-2) wet density clay assigned water table.equil. stress state installation.\n2-1) change properties pile zones \nrepresenting clay representing concrete.\n2-2) vertical equil. stress distribution equil. state \nshown innote: include Figure contours vertical stress ini state\nincld. pile weightequil. stress state installation.\n2-1) change properties pile zones \nrepresenting clay representing concrete.\n2-2) vertical equil. stress distribution equil. state \nshown innote: include Figure contours vertical stress ini state\nincld. pile weightapply vertical velocity top pile\n“ramp” = boundary condition increased linearlynote: critical timestep controlled high stiffness \nconcrete\nvelocity sudden, inertial effects dominate renders\ndifficulty identification steady state response system\ntable “ramp” used apply velocity pile top gridpoints.\nnote: FISH FUNCTION vert_load calculates axial stress top \npile stores value history\nefficiency, gridpoints cap surface stored symbol “cap”\nmapnote: include plot axial stress vs axial displ. pile toe.\nramp = (0,5e-8), step number = 30000\nnote: combined damping used remove kinetic energy \nprescribed loading condition. mass-adjustment\nprocess depends velocity sign-changes..note: FISH FUNCTION tot_reac monitors soil reaction along pile \nfunc lateral displ. tot_reac creates tables soil reaction (p)\nvs. lateral displ (y) diff. locations along pile generate p-y\ncurve.\nnote: include Figure p-y curve 11 equidistant points along\npileapply vertical velocity top pile\n“ramp” = boundary condition increased linearlynote: critical timestep controlled high stiffness \nconcrete\nvelocity sudden, inertial effects dominate renders\ndifficulty identification steady state response system\ntable “ramp” used apply velocity pile top gridpoints.note: FISH FUNCTION vert_load calculates axial stress top \npile stores value history\nefficiency, gridpoints cap surface stored symbol “cap”\nmapnote: include plot axial stress vs axial displ. pile toe.\nramp = (0,5e-8), step number = 30000note: combined damping used remove kinetic energy \nprescribed loading condition. mass-adjustment\nprocess depends velocity sign-changes..note: FISH FUNCTION tot_reac monitors soil reaction along pile \nfunc lateral displ. tot_reac creates tables soil reaction (p)\nvs. lateral displ (y) diff. locations along pile generate p-y\ncurve.note: include Figure p-y curve 11 equidistant points along\npile","code":""},{"path":"axial-concrete-pile.html","id":"zones-1","chapter":"2 Axial Concrete Pile","heading":"2.3 Zones","text":"","code":"model new\nmodel title 'Axial and lateral loading of a concrete pile'\n; create grid interactively from the extruder tool, \n; exported to geometry.f3dat from State Record pane.\ncall 'geometry' suppress\nzone generate from-extruder\n; Reflect the grid to get a 1/2 space instead of a 1/4 space\nzone reflect dip-direction 270 dip 90"},{"path":"axial-concrete-pile.html","id":"groups","chapter":"2 Axial Concrete Pile","heading":"2.4 Groups","text":"","code":"; Name intersections of things named in the two extruder views\nzone group 'clay' range group 'clay-c' or 'clay-s' or 'wetclay-s'\nzone group 'pile' range group 'pile-c' group 'pile-s' or 'remove-s'\nzone group 'remove' range group 'remove-s' group 'pile-c' not ; \nzone face group 'wall' internal range group 'wall-c' group 'pile'\nzone face group 'base' internal range group 'base-s' group 'pile'\nzone face skin ; Name far field boundaries\n; Delete the area marked for removal\nzone delete range group 'remove'\n;\n; setup interfaces\n; separate using zone separate\n; all at once so common nodes are separated\nzone separate by-face new-side group 'iwall' slot 'int' ...\n     range group 'wall' or 'base'\n; Want two different interfaces for proper normal direction at corner\nzone interface 'side' create by-face range group 'wall' and 'iwall'\nzone interface 'base' create by-face range group 'base' and 'iwall'\n; Save initial geometric state\nmodel save 'geometry'"},{"path":"axial-concrete-pile.html","id":"properties","chapter":"2 Axial Concrete Pile","heading":"2.5 Properties","text":"","code":"; Initialize gravity, pore-pressures, density, and stres state\nmodel gravity 10\n; water table information\nzone water density 1000\nzone water plane origin (0,0,-5.5) normal (0,0,-1)\nzone initialize density 1230\nzone initialize density 1550 range group 'wetclay-s' ; Wet density\n; assign properties to the soil and interfaces - temporarily remove pile cap\nzone cmodel assign mohr-coulomb ...\n     range group 'clay'\nzone property bulk 8.333e7  shear 3.846e7  cohesion 30000 fric 0 ...\n     range group 'clay'\nzone cmodel assign elastic                 range group 'pile'\nzone property bulk 8.333e7  shear 3.846e7  range group 'pile'\nzone cmodel assign null                    range group 'remove-s'\nzone interface 'side' node property stiffness-normal 1e8 ...\n                           stiffness-shear 1e8 friction 20 cohesion 30000\nzone interface 'base' node property stiffness-normal 1e8 ...\n                           stiffness-shear 1e8 friction 20 cohesion 30000"},{"path":"axial-concrete-pile.html","id":"b.c.-and-i.c.","chapter":"2 Axial Concrete Pile","heading":"2.6 B.C. and I.C.","text":"","code":"; boundary and initial stress conditions\nzone face apply velocity-normal 0 range group 'Bottom'\nzone face apply velocity-normal 0 range group 'East' or 'West'\nzone face apply velocity-normal 0 range group 'North' or 'South'\nzone initialize-stress ratio 0.4286\nzone interface 'side' node initialize-stresses\nzone interface 'base' node initialize-stresses"},{"path":"axial-concrete-pile.html","id":"initial-equilibrium-1","chapter":"2 Axial Concrete Pile","heading":"2.7 Initial Equilibrium","text":"","code":"; Solve to initial equilibrium\nzone ratio local\nmodel solve ratio 1e-4\nmodel save 'initial'"},{"path":"axial-concrete-pile.html","id":"alterations-1","chapter":"2 Axial Concrete Pile","heading":"2.8 Alterations","text":"","code":""},{"path":"axial-concrete-pile.html","id":"install-the-pile","chapter":"2 Axial Concrete Pile","heading":"2.8.1 install the pile","text":"","code":"; install the pile\nmodel restore 'initial'\nzone cmodel assign elastic                          range group 'pile'\nzone property bulk 13.9e9 shear 10.4e9 density 2500 range group 'pile'\nmodel solve ratio 1e-4\nmodel save 'install'"},{"path":"axial-concrete-pile.html","id":"vertical-loading","chapter":"2 Axial Concrete Pile","heading":"2.8.2 vertical loading","text":"","code":"; vertical loading\nzone initialize state 0\nzone gridpoint initialize displacement (0,0,0)\nzone gridpoint initialize velocity     (0,0,0) \ntable 'ramp' add ([global.step],0) ([global.step+30000],-5e-8) ...\n      ([global.step+58000],-5e-8) ; Increase velocity applied to pile\n                                  ; over 30,000 steps\nzone face apply velocity-normal 1 table 'ramp' range group 'Top'\nhistory interval 250\nzone history name 'disp' displacement-z position (0,0,0)\ncall 'load'\nfish history name 'load' @vert_load\nzone mechanical damping combined\nmodel step 58000\nmodel save 'vertical-loading'"},{"path":"axial-concrete-pile.html","id":"vertical-then-lateral-loading","chapter":"2 Axial Concrete Pile","heading":"2.8.3 vertical then lateral loading","text":"","code":"; vertical loading then lateral loading\nmodel restore 'install'\nzone initialize state 0\nzone gridpoint initialize displacement (0,0,0)\nzone gridpoint initialize velocity     (0,0,0) \nzone face apply stress-zz [-1.0e5/(math.pi*0.3*0.3)] range group 'Top'\nmodel solve ratio 1e-4\nmodel save 'lateral-load-start'\n\n; apply lateral loading as x-velocity on cap\nzone initialize state 0\nzone gridpoint initialize displacement (0,0,0)\nzone gridpoint initialize velocity     (0,0,0) \nzone face apply velocity-x 1e-7 range group 'Top'\nzone history name 'disp' displacement-x position 0,0,0\ncall 'p-y' suppress ; Calculates p-y curve for pile, when tot_reac is called\n@make_pydata        ; Generate p-y curve calculation data \n@output_structure   ; Sanity check of p-y curve data \nfish history name 'load' @tot_reac\nmodel step 416500\nmodel save 'lateral-load'"},{"path":"pull-tests.html","id":"pull-tests","chapter":"3 Pull-Tests","heading":"3 Pull-Tests","text":"","code":""},{"path":"pull-tests.html","id":"problem-description-1","chapter":"3 Pull-Tests","heading":"3.1 Problem Description","text":"note: FISH function force used sum reaction forces \nmonitor nodal displacement generated pull-testnote: free length bolt extends block + larger diameter\nPerfectly plastic behavior grout = max cohesion exceeded\n+post-peak weakening shear bond strengthnote: bond strength softening grout defined keyword\ncoupling-cohesion-table (see Rockbolt Behavior)\nrelation btw shear disp. cohesion weakening prescribed thru\ntable cct. softening friction grout canbe defined using keyword\ncoupling-friction-table.","code":""},{"path":"pull-tests.html","id":"zones-2","chapter":"3 Pull-Tests","heading":"3.2 Zones","text":"","code":"; ==================================================================\n;   Simulation of pull-test for grouted reinforcement\n;   using modified pile elements - Softening of cohesion\n; ==================================================================\nmodel new \nfish automatic-create off\nmodel title 'Pull-test using modified pile elements - cohesion softening'\n; Create a single rock block and set its material properties.\nzone create brick size 4 4 6 point 1 (0.4,0,0) point 2 (0,0.4,0) ...\n                             point 3 (0,0,0.6)"},{"path":"pull-tests.html","id":"properties-1","chapter":"3 Pull-Tests","heading":"3.3 Properties","text":"","code":"zone cmodel assign elastic\nzone property bulk 5e9 shear 3e9\nzone face apply velocity-normal 0.0 range position-z 0.6\n; Create a pile element and assign properties\nstruct pile create by-line (0.2,0.2,0.1) (0.2,0.2,0.7) segments 12\nstruct pile property rockbolt-flag on\nstruct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                     perimeter 0.08\nstruct pile property tensile-yield   2.25e5  ; ultimate tensile strength\nstruct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8 ; 0.25*pi*r^4\nstruct pile property coupling-cohesion-shear 1.75e5 ...\n                     coupling-stiffness-shear 1.12e7\nstruct pile property coupling-cohesion-normal 1.75e5 ...\n                     coupling-stiffness-normal 1.12e7\n; rel btw shear displ and coh weakening is prescribed thru table cct\nstruct pile property coupling-cohesion-table 'cct'\n; change in cohesion with relative shear displacement\ntable 'cct' add (0,1.75e5) (0.025,1.75e4)"},{"path":"pull-tests.html","id":"initial-equilibrium-2","chapter":"3 Pull-Tests","heading":"3.4 Initial Equilibrium","text":"","code":"struct node fix velocity-x range position-z 0.7\nstruct node initialize velocity-x 1e-6 local range position-z 0.7\ncall 'pileforce' suppress ; FISH function calculates reaction force on zones"},{"path":"pull-tests.html","id":"alterations-2","chapter":"3 Pull-Tests","heading":"3.5 Alterations","text":"","code":"; Set up histories for monitoring model behavior\nhistory interval 10\nfish history name 'force' @force\nstruct node history name 'disp' displacement-z position (0.2,0.2,0.7)\n; Achieve a total displacement of 4.0 cm\nmodel cycle 40000\n;\nmodel save 'pull-5'"},{"path":"pull-tests.html","id":"some-other-notes","chapter":"3 Pull-Tests","heading":"3.6 Some other notes","text":"2.3. pull test confinement “Pulltest06.f3dat” +modified pile\nlogic.(see Behavior Shear Coupling Springs) linear law \nimplemented.whereby reinforcement shear strength defined constantConfining stress 4 MN/m2 = 4MPaAs described Behavior Shear Coupling Springs linear law \nimplemented modified\npile logic, whereby reinforcement shear strength defined \nconstant\n(coupling-cohesion-shear) plus effective pressure\nreinforcement multiplied reinforcement perimeter\n(perimeter) times friction angle (coupling-friction-shear). \npressure dependence \nactivated automatically FLAC3D issuing \nreinforcement properties (perimeter) (coupling-friction-shear).(coupling-cohesion-shear)+ effective pressureperimeterfric\nangle(coupling-friction-shear)\npressure dependence activated automatically issuing\nreinforcement properties(perimeter) and2.5. pull test tensile rupture “Pulltest08.f3dat” note:\ntensile-yield, tensile-failure-strain: limiting axial yield force\nlimiting axial strain rockbolt","code":""},{"path":"grid.html","id":"grid","chapter":"4 Grid","heading":"4 Grid","text":"","code":""},{"path":"grid.html","id":"primitive-shapes","chapter":"4 Grid","heading":"4.1 Primitive Shapes","text":"note: zone create generates primitive grid\nnote: zone gridpoint create puts gridpoints specific locations\nnote: zone gridpoint merge ensures separate primitives connected properly\nnote: zone attach connects primitive meshes different zone sizes.ex) 5 along inner radius cylindrical tunnel,\n10 along axis\n6 along circumference tunnel\n12 periphery tunnel outer boundary modelnote: size keyword defines number zones grid.keywords zone create:\n- dimension - edge - fill - point (boundary dimensions) - ratio (coarser\ntoward edge) - size","code":"zone create radial-cylinder size 5 10 6 12 fill\nzone create radial-cylinder size 5 10 6 12 ratio 1 1 1 5\neach size is controlled by a ratio (geometric ratio of 1.2 times preceding zone)"},{"path":"grid.html","id":"several-primitive-shapes-connected","chapter":"4 Grid","heading":"4.2 several primitive shapes connected:","text":"adds symmetric part.note: symmetry plane vertical plane (located dip,dip-direction, origin keywords) coincident x = 0 plane.\nNote dip angle (dip) dip direction (dip-direction)\nassume thatx corresponds “East,” y “North,” z “.”third option, zone gridpoint create command, available \nposition single points model region.\n> note: zone gridpoint create used positioning reference points ofprimitivesDuring execution zone create command, check made \nboundary gridpoint boundary gridpoints zones already\nexist.\ntwo boundary gridpoints fall within tolerance 1 10-7 (relative magnitude gridpoints position vector) , assumed point,\ndiscovered gridpoints don’t match, zone gridpoint merge command can used merge gridpoints zone create command applied.Example: (zone attach) - Two unequal sub-gridsExample: (zone densify)first two command lines can changed zone densify\nsegments 2 refines upper zones (z-coordinate 2 4) segment number 2 edge.","code":"zone create radial-cylinder size 5 10 6 12 rat 1 1 1 1.2 ...\n                           point 0 (0,0,0) point 1 (100,0,0) ...\n                           point 2 (0,200,0) point 3 (0,0,100)\nzone create radial-tunnel size 5 10 5 12 rat 1 1 1 1.2 ...\n                          point 0 (0,0,0) point 1 (0,0,-100) ...\n                          point 2 (0,200,0) point 3 (100,0,0)\n; here, model boundary dimensions are 100, 200, 100\n; boundary coord are defined using point keyword\n\nzone reflect dip 90 dip-direction 270 origin (0,0,0) zone create brick size 4 4 2 point 0 (0,0,0) point 1 (4,0,0) ...\n                             point 2 (0,4,0) point 3 (0,0,2)\nzone create brick size 8 8 4 point 0 (0,0,2) point 1 (4,0,2) ...\n                             point 2 (0,4,2) point 3 (0,0,4)\nzone attach by-face range position-z 2zone create brick size 4 4 4\nzone densify segments 2 range position-x 2 4"},{"path":"grid.html","id":"structural-element-operation","chapter":"4 Grid","heading":"4.3 Structural Element Operation","text":"Creating liner service tunnelThe liner contains 240 structural shell elements connected FLAC3D grid 143 structural-node links. grid liner shown .","code":"; liner\nstructure shell create by-face range cylinder ...\n                                     end-1 (0,0,-1) end-2 (0,50,-1) ...\n                                     radius 3"},{"path":"grid.html","id":"densifying-grid-by-specifying-max-size-length","chapter":"4 Grid","heading":"4.4 Densifying grid by specifying max size length","text":"note local z-direction, maximum size length 0.4. FLAC3D densifies maximum length direction 1/3 (= 0.4)zone attach -face command example used attach faces sub-grids together rigidly form single grid.Always use zone attach -face command zone densify\ncommand different numbers gridpoints along faces \ndifferent zones.","code":"model new\nzone create brick size 4 4 4\nplot 'Brick' export bitmap filename 'densify3.png'\n;\nzone densify local maximum-length (0.5,0.5,0.4) range position-z 2 4\nzone attach by-face\n;\nplot 'Brick' export bitmap filename 'densify4.png'"},{"path":"grid.html","id":"densify-a-grid-using-geometric-information","chapter":"4 Grid","heading":"4.4.1 Densify a grid using geometric information","text":"","code":"model new\nzone create brick size 10 10 10\n;\ngeometry set \"setA\" polygon create ...\n                    by-positions (0,0,1) ( 5,0, 1) ( 5,10, 1) (0,10,1)\ngeometry set \"setA\" polygon create ...\n                    by-positions (5,0,1) (10,0, 5) (10,10, 5) (5,10,1)\ngeometry set \"setB\" polygon create ...\n                    by-positions (0,0,5) ( 5,0, 5) ( 5,10, 5) (0,10,5)\ngeometry set \"setB\" polygon create ...\n                    by-positions (5,0,5) (10,0,10) (10,10,10) (5,10,5)\nplot 'Brick2' export bitmap filename 'densify5.png'\n\nzone densify segments 2 range geometry-space \"setA\" set \"setB\" count 1\nzone attach by-face\n;\nplot 'Brick2' export bitmap filename 'densify6.png'"},{"path":"syntax-and-grammar.html","id":"syntax-and-grammar","chapter":"5 Syntax and Grammar","heading":"5 Syntax and Grammar","text":"","code":""},{"path":"syntax-and-grammar.html","id":"introduction","chapter":"5 Syntax and Grammar","heading":"5.1 Introduction","text":"","code":"import itasca as it\nit.command(\"python-reset-state false\")\nit.command(\"\"\"\nmodel new\nzone create brick size 10 10 10\nzone cmodel assign elastic\nzone property density 2950 young 12e9 poisson 0.25\ncycle 1\n\"\"\")\nit.zone.count()\nz=it.zone.find(1)\nprint z\nz.pos()\nvolume_sum = 0.0\nfor z in it.zone.list():\n  volume_sum += z.vol()\n\nprint volume_sum\nprint z.vol() * it.zone.count()\nassert volume_sum == z.vol() * it.zone.count()\n\nz = it.zone.near ((5,5,5))\nz.pos()"},{"path":"syntax-and-grammar.html","id":"zones-3","chapter":"5 Syntax and Grammar","heading":"5.2 Zones","text":"","code":"it.zone.count() # 1000\nz = it.zone.find(1)\nfor z in it.zone.list():\n  z = it.zone.near((5,5,5))\nz.pos()\nz.vol()"},{"path":"syntax-and-grammar.html","id":"properties-2","chapter":"5 Syntax and Grammar","heading":"5.3 Properties","text":"","code":"z.props() or z.props()['bulk']\nz.prop('shear')\nz.set_prop('bulk', 8.5e9)"},{"path":"syntax-and-grammar.html","id":"gridpoints","chapter":"5 Syntax and Grammar","heading":"5.4 Gridpoints","text":"","code":"gp = it.gridpoint.near((2,2,2))\nfor gp in it.gridpoint.list():\n  total_mass = gp.mass_gravity()\nz.vol()*z.density()*1000"},{"path":"syntax-and-grammar.html","id":"structural-elements","chapter":"5 Syntax and Grammar","heading":"5.5 Structural Elements","text":"","code":"it.structure.list()\nit.structure.find(1)\nit.structure.near((0,2,2))\nit.structure.node.find(1)\ns_node.links()[0]"},{"path":"syntax-and-grammar.html","id":"extra-variables","chapter":"5 Syntax and Grammar","heading":"5.6 Extra Variables","text":"","code":"z.set_extra(1, 1.23)\nz.set_extra(2, \"a test string\")\nz.set_extra(1, gp.pos())"},{"path":"syntax-and-grammar.html","id":"groups-and-b.c.","chapter":"5 Syntax and Grammar","heading":"5.7 Groups and B.C.","text":"","code":"if z.group(\"default\") == \"lower\":\n  gp.set_fix(0, True)\n  gp.set_fix(1, True)\n  gp.set_force_load((1e6,2e6,1e6))\nit.zone.near((5,5,5)).stress()\nit.zone.near((5,5,5)).strain()\n\"\"\""},{"path":"syntax-and-grammar.html","id":"parameteric-studies","chapter":"5 Syntax and Grammar","heading":"5.8 Parameteric Studies","text":"","code":"\"*note: for modulus in [6e9, 8e9, 10e9, 12e9]:\"\nit.command(\"\"\"\nmodel restore 'before_cycling'\nzone prop young {}\nmodel solve\n\"\"\".format(modulus))\nvertical_disp = it.gridpoint.near((5,5,10)).disp_z()\nprint \"~~~\".format(modulus,vertical_disp)"},{"path":"syntax-and-grammar.html","id":"results-1","chapter":"5 Syntax and Grammar","heading":"5.9 Results","text":"discussed Reaching Equilibrium, recommend use convergence 1.0 limit criteria using model solve commandInitially solving convergence 100 examining response good practice. Making isosurface plots convergence see model trouble can give insight model adjustments interest efficiency best placed.order determine collapse load, often better use\n“strain-controlled” rather “stress-controlled” boundary conditions (.e., apply constant velocity measure reaction forces, rather apply forces measure displacements).","code":"; Solve\nmodel solve convergence 1\nmodel factor-of-safety file 'slope3dfos' associated convergence 1"},{"path":"syntax-and-grammar.html","id":"measuring-time-of-calculation","chapter":"5 Syntax and Grammar","heading":"5.9.1 Measuring time of calculation","text":"","code":"[global start = time.clock]\nmodel step 100\n[global rate = 10 * zone.num / (time.clock-start) ]\n[io.out('Calculation rate = '+string(rate)+' kilo-zones/sec')]"},{"path":"syntax-and-grammar.html","id":"setting-fish-variables","chapter":"5 Syntax and Grammar","heading":"5.10 Setting FISH variables","text":"","code":"import itasca as it\nit.command('python-reset-state false')\nit.fish.set('x', 10)\nx = it.fish.get('x') yields 10"},{"path":"syntax-and-grammar.html","id":"issuing-command","chapter":"5 Syntax and Grammar","heading":"5.10.1 Issuing Command","text":"","code":"import itasca as it\nimport numpy as np\ndata = np.loadtext('brick-data.txt')\ncommand_template = ;;; \nzone create brick\nzone cmodel assign elastic\nzone property density {density} young {young} poisson {poisson}\n;;;\ndensity = data[0]\nyoung = data[1]\npoisson = data[2]\n\ncommand = command_template.format(density=density, young=young, poisson=poisson)\nit.command(command)"},{"path":"syntax-and-grammar.html","id":"string","chapter":"5 Syntax and Grammar","heading":"5.11 String","text":"","code":"\"The value of x is {:.2f}\".format(0.3872)\n\"The value of x is {:.2e}\".format(0.3872)\n\"My name is Sasha\"\n\"My name is {}\".format(\"Sasha\")\n\"My name is {name}\".format(name=\"Sasha\")"},{"path":"syntax-and-grammar.html","id":"fish-syntax","chapter":"5 Syntax and Grammar","heading":"5.12 Fish Syntax","text":"","code":""},{"path":"syntax-and-grammar.html","id":"use-of","chapter":"5 Syntax and Grammar","heading":"5.12.1 Use of (…)","text":"complete FISH statement occupies one line. However, line may \ntyped across two lines long line ultimate terminated continuation character ( … ).Use temporary variables hinge points concatenate lengthy formulas can also handy. following example shows can done:","code":"fish define long_sum  ;example of a sum of many things\n    local temp = v1 + v2 + v3 + v4 + v5 + v6 + v7 + v8 + v9 + v10\n    long_sum = temp + v11 + v12 + v13 + v14 + v15\nend"},{"path":"syntax-and-grammar.html","id":"variable-types","chapter":"5 Syntax and Grammar","heading":"5.12.2 Variable Types","text":"resulting screen display looks like :","code":"model new\nfish define types\n    v1 = 2\n    v2 = 3.4\n    v3 = 'Have a nice day'\n    v4 = v1 * v2\n    v5 = v3 + ', old chap'\n    v6 = vector(1,2,3)\n    v7 = matrix(vector(1,1,1))\n    v8 = true\nend\n@types\nfish list           Name    Value\n           ------- --------------------\n(function) types 0 (integer)\n           v1    2 (integer)\n           v2    3.400000000000000e+00 (real)\n           v3    'Have a nice day' (string)\n           v4    6.800000000000000e+00 (real)\n           v5    'Have a nice day, old chap' (string)\n           v6    (1.000000000000000e+00,2.000000000000000e+00,\n                  3.000000000000000e+00) (vector3)                [**]\n           v7    3 x 1 (matrix)\n           v8    true (boolean)"},{"path":"syntax-and-grammar.html","id":"traditional-for-loop-in-fish","chapter":"5 Syntax and Grammar","heading":"5.12.3 Traditional for loop in FISH","text":"Standard loop also available FISH provide additional\nloop control.","code":"fish define xxx\n    sum  = 0\n    prod = 1\n    loop for (n = 1, n <= 10, n = n + 1)\n        sum  = sum  + n\n        prod = prod * n\n    end_loop\n    io.out('The sum is ' + string(sum) + ... \n           ' and the product is ' + string(prod))\nend\n@xxx"},{"path":"syntax-and-grammar.html","id":"controlled-loop","chapter":"5 Syntax and Grammar","heading":"5.12.3.1 Controlled loop","text":"case, loop variable n given successive values 1 \n10, statements inside loop (loop endloop\nstatements) executed value. mentioned, variable names \narithmetic expression substituted numbers 1 10.\nNote exit statement can used break FISH loop \ncontinue statement can used skip remaining instructions \nloop, moving next sequence loop.important note formulation looping different\nloop high-level programming languages. instance,\none easily control ending condition (.e., loop 1 10\nexcluding 10) incrementing mechanism (.e., loop 1 10 \ntwos loop backward). standard loop also available FISH \nprovide additional loop control.","code":"model new\nfish define xxx\n    sum  = 0\n    prod = 1\n    loop n (1,10)\n        sum  = sum  + n\n        prod = prod * n\n    end_loop\n    io.out('The sum is ' + string(sum) +  ...\n           ' and the product is ' + string(prod))\nend\n@xxx"},{"path":"syntax-and-grammar.html","id":"if-else-endif-construct","chapter":"5 Syntax and Grammar","heading":"5.12.4 if else endif construct","text":"statements allow conditional execution FISH function segments;\nelse optional. item test consists one \nfollowing symbols symbol pairs:= # > < >= <=displayed value abc example depends argument\nprovided abc executed. experiment \ndifferent test symbols (e.g., replace > <).now, FISH functions invoked FLAC3D, either \nusing sqaure brackets [] inline FISH, giving function name\nprepended @ character, using fish list command.\nalso possible reverse, give FLAC3D commands \nwithin FISH functions. valid FLAC3D commands can embedded\nfollowing FISH statements:","code":"model new\nfish define abc(xx)\n    if xx > 0 then \n        abc = 33\n    else\n        abc = 11\n    end_if\nend\n[abc(1)]\n[abc(-1)]"},{"path":"syntax-and-grammar.html","id":"arrays-and-maps","chapter":"5 Syntax and Grammar","heading":"5.12.5 Arrays and Maps","text":"often case one like store list objects \nloop future. may computed values \nzones, instance, specific gridpoint pointers . FISH \ntwo containers use circumstances, termed arrays maps.array holds list FISH variables type can looped\naccessed integer index element array.\nArrays can multidimensional resize dynamically. simple\nexample shows one can create array integers sum\nvalues.","code":""},{"path":"syntax-and-grammar.html","id":"array-example","chapter":"5 Syntax and Grammar","heading":"5.12.5.1 Array example","text":"example, array created filled numbers. loop\nconstruct used loop array entries sum \nproduct computed output.map, hand, associative container, meaning one\ncan access members map integer string used insert \nvalue map. Maps can dynamically resized added one\nanother (appending maps together), preferred constructs \nstoring lists FISH variables later access.","code":"model new\nfish define array_operation\n    ;create and populate an array with products of 2\n    arr = array.create(10)\n    loop local n(1,10)\n        arr[n] = 2*n\n    end_loop\n      \n    ;compute the sum and product of elements in the array\n    sum = 0\n    prod = 1\n    local i = 1\n    loop while (i <= array.size(arr,1))\n        sum = sum + arr[i]\n        prod = prod * arr[i]\n        i = i + 1\n    end_loop\n    io.out('The sum is ' + string(sum) + ...\n           ' and the product is ' + string(prod))\nend\n@array_operation"},{"path":"syntax-and-grammar.html","id":"map-example","chapter":"5 Syntax and Grammar","heading":"5.12.5.2 Map example","text":"Unlike arrays, maps can looped using loop foreach\nconstruct. case, n value held map entry, \ninteger name object map. Likewise, instead using\nintegers insert objects map, one use strings \nfirst, second, etc. allows one easily efficiently store \naccess FISH variables user-defined name.","code":"model new\nfish define map_operation\n    ;create and populate a map with products of 2\n    my_map = map(1,2)\n    loop local n(2,10)\n        map.add(my_map,n,2*n)\n    end_loop\n      \n    ;compute the sum and product of elements in the map\n    sum = 0\n    prod = 1\n    loop foreach n my_map\n        sum = sum + n\n        prod = prod * n\n    end_loop\n    io.out('The sum is ' + string(sum) + ...\n           ' and the product is ' + string(prod))\nend\n@map_operation"},{"path":"syntax-and-grammar.html","id":"fish-function","chapter":"5 Syntax and Grammar","heading":"5.12.6 Fish Function","text":"FISH functions calculate bulk shear moduli","code":"model new\nfish define derive(y_mod,p_ratio)\n    s_mod = y_mod / (2.0 * (1.0 + p_ratio))\n    b_mod = y_mod / (3.0 * (1.0 - 2.0 * p_ratio))\nend\n[derive(5e8,0.25)]\n[b_mod] \n[s_mod]"},{"path":"code-block.html","id":"code-block","chapter":"6 Code Block","heading":"6 Code Block","text":"","code":""},{"path":"code-block.html","id":"some-code","chapter":"6 Code Block","heading":"6.1 Some Code","text":"Properties may specified type physical item, \ninherited automatically associated component objects. \nexample, commandwill assign grout friction angle 30 degrees cable elements\nthar part cable ID number 3, whereas commandwill assign grout friction angle 30 degrees single cable\nelement component-ID number 3.","code":"struct cable property grout-friction=30.0 range id=3struct cable property grout-friction=30.0 range component-id=3\" GROUPS AND MASK ARRAYS \"\nit.command(\"zone group \\\"lower\\\" range position-z 0 5\")\nza.in_group(\"lower\")\nza.in_group(\"lower\").sum(), \"zones in lower group.\"\ncorner_mask = reduce(np.logical_and, (x<3, y<3, z<3))\nza.set_group(corner_mask, \"corner\", \"geometry\")\nprint za.in_group(\"corner\", \"geometry\").sum(), \"zones in corner group.\"\n\" GRIDPOINTS ARRAY FUNCTIONS \"\ngpos = gpa.pos()\ngx, gy, gz = gpos.T\nprint gz\nf = gpa.fixity()\nprint f\nf[:,][gz==0] = True, True, True\nprint f\ngpa.set_fixity(f)\ntop_gridpoints = gz==10\nradial_distance = np.sqrt((gx-5)**2+(gy-5)**2)\ncentral_gridpoints = radial_distance < 5\nmask = np.logical_and(top_gridpoints, central_gridpoints)\nprint \"boundary load applied to {} gridpoints\".format(mask.sum())\nfapp = gpa.force_app()\nprint fapp\nfapp[:,2] = mask*1e6*(5.0-radial_distance)/5.0\ngpa.set_force_app(fapp)\nprint \"zone centroids: \"\nprint za.pos()\nza.gridpoints()\nza.faces()\nza.ids()\nprint za.neighbors()\n\" =================RESULTS=================== \"\nit.command(\"model solve\")\nprint \"gridpoint displacements:\"\nprint gpa.disp()\nprint \"gridpoint displacement magnitudes: \"\nmag = np.linalg.norm(gpa.disp(), axis=1)\nprint mag\nmax_index = np.argmax(mag)\nprint \"Maximum displacement: {} at location {}\".format(gpa.disp()[max_index],\n                                              gpa.pos()[max_index])\nprint \"Vertical displacement along the vertical line x=5, y=5: from z=0 to z=10\"\nprint gpa.disp()[np.logical_and(gx==5, gy==5)][:,2]\nza.stress()\nza.stress_flat()\n\" =========REFERENCE EXAMPLES================ \"\n\"\"\" Some Numpy Operation Examples\nnp.array([1,2,3,4,5])\nnp.linspace(0,1,15)\nnp.zeros((4,4))\na = np.linspace(0,1,15)\nb = np.ones_like(a)\nnp.sin(a)\nprint a[0]\na[0] = 20.2\nprint a\nc = np.array(((1,2,3),(4,5,6),(7,8,9),(10,11,12)))\nprint c\nc[0][0]\nc[:,0]\n\"\"\"\n\"\"\" SOME GRIDPOINTS EXAMPLES\nz = it.zone.near((5,5,5))\nprint \"central zone id: {}, position: {}\".format(z.id(), z.pos())\n\nfor gp in z.gridpoints():\n    print \"gridpoint with id: {} at {}\".format(gp.id(), gp.pos())\n\"\"\""},{"path":"code-block.html","id":"interface","chapter":"6 Code Block","heading":"6.2 Interface","text":"Interfaces often created zone interface create -face\ncommand:command creates interface named flt separating zone faces\nfound z=5 placing interface elements nodes one side.\nContacts found (forces generated) interface nodes coming \ncontact zone surface faces part interface\n.\nFigure 6.1: Code chunk syntax\nEvery reference interface uses name (like table command) \nindicate interface referred toInterfaces FLAC3D one-sided objects. Interface elements (\ngeneral) created attached zone surface faces, turn create\ninterface nodes. contact detection interface nodes \nzone surface faces.commonly, interfaces need created starting mesh \ncontinuous. case, easiest separate mesh \ncreate interfaces one command using separate keyword (\nshown example ).new-side-origin keyword can used determine side \nseparation interface elements applied . side opposite \nlocation origin selected. example , select\nside, change command ","code":"zone interface 'flt' create by-face separate range position-z 5\nzone interface 'flt' node property stiffness-normal 1e8 stiffness-shear 1e8zone interface 'flt' create by-face separate new-side-origin (0,0,10) ...\nrange position-z 5"},{"path":"code-block.html","id":"penetration","chapter":"6 Code Block","heading":"6.2.1 Penetration","text":"calculation normal stress due interface penetration \nabsolute instead incremental. means moving gridpoint\nrelative interface normal direction immediate\neffect normal stress calculated. true accumulated\nshear stress, remains incremental.small-strain mode, gridpoints actually move location \nresponse accumulated velocities.small-displacement\" field. vector field accumulated \nvelocity field every step small-strain mode . \npurposes calculating interface penetration, gridpoint location \nbased current location plus small-strain displacement. \nsmallstrain displacement may initialized using zone gridpoint\ninitialize displacement-small command, sometimes useful \nreset effective penetration interface grid motion.\ninitialize interface stresses without actually moving gridpoints, \nintroduce normal stress increment added normal stress\ncalculated absolute penetration. value set \nzone interface node initialize-stresses command given. can\nalso set explicitly using zone interface node\nstress-normal-increment.Spatial Variation Randomness Property DistributionMaterial properties can specified adjust vary function\ngrid position. fact, different property can assigned every\nzone FLAC3D model, regardless model size. two commands\navialable FLAC3D specfiy material properties. first, zone\nproperty, allows multiple properties specified single\ncommand. convenient completely specify properties \ndifferent regions, property vary within region.\nsecond can specify one property time, optional\nkeywords allow property value automatically varied \nspace. zone property-distribution command. Among \navailable keywords add, multiply, gradient, vary, can \nused provide fixed linear variations properties position.\nexample, following command provides linear variation \ncohesion x-direction:initial profile property can also assigned via FISH. \nFLAC3D, also possible study influence nonhomogeneity \nmaterial. type statistical property distribution can \nintroduced, element may unique property value. Two\noptional keywords available apply random distribution \nselected property zone propertydistribution command. \nkeyword deviation-gaussian assumes normal (Gaussian) distribution \nproperty, mean value, v, standard deviation, s. \nkeyword deviation-uniform assumes uniform distribution mean\nvalue, v, standard deviation, s. careful ensure \nproperties acquire negative values s large. example,\nfollowing command give mean friction angle 40° \nstandard deviation ±5%: zone property-distribution friction 45\ndeviation-gaussian 2 Use variation keywords command (\njust property variation) defined topic Value Modifiers\n(Add, Multiply, Gradient, Vary).","code":"zone property-distribution cohesion 1e6 gradient (-1e5,0,0)"},{"path":"code-block.html","id":"kaist-model-1","chapter":"6 Code Block","heading":"6.3 KAIST Model","text":"","code":"import itasca as it\nimport numpy as np\nnp.set_printoptions(threshold=20)\nit.command(\"python-reset-state false\")\nfrom itasca import zonearray as za\nfrom itasca import gridpointarray as gpa\n\n# PARAMETERS #\n\n_D_shaft = 1\n_H_shaft = 7.45\n_T_plate = 1.5\n_B_footing = 3.25\n_D_footing = _H_shaft + _T_plate\n_B_soil = _B_footing*5\n_D_soil = _D_footing+3\n\n_radial = 50\n_perimeter = 2*_radial\n_axial = 2*_radial\n_outer = 2*_radial\n\n_bulk = 13.9e9\n_shear = 10.4e9\n\n_E_o = 1e7\n_const = 1e8\n_poisson = 0.25\n\n# ZONE #\n\ncommand_zone = \"\"\"\nmodel new\nz crea r-t p 0 (0,0,0) ...\n           p 1 ({B_soil},0,0) ... \n           p 2 (0,{D_soil},0) ...\n           p 3 (0,0,{B_soil}) ...\n           p 4 ({B_soil},{D_soil},0) ...\n           p 5 (0,{D_soil},{B_soil}) ...\n           p 6 ({B_soil},0,{B_soil}) ...\n           p 7 ({B_soil},{D_soil},{B_soil}) ...\n           p 8 ({B_footing},0,0) ...\n           p 9 (0,0,{B_footing}) ...\n           p 10 ({B_footing},{D_soil},0) ...\n           p 11 (0,{D_soil},{B_footing}) ...\n           p 12 ({B_footing},0,{B_footing}) ...\n           p 13 ({B_footing},{D_soil},{B_footing}) ...\n           size {radial} {axial} {perimeter} {outer} ...\n           rat 1 1 1 1.01 ...\n           fill\n\"\"\"\n\ncommand = command_zone.format(\nB_footing = _B_footing,\nB_soil = _B_soil,\nD_soil = _D_soil,\nradial=_radial,\naxial = _axial,\nperimeter = _perimeter,\nouter = _outer)\n\nit.command(command)\n\n# GROUP #\n\np = za.pos()\nx,y,z = p.T\nprint(it.zone.count(), \"zones in whole model\")\n\nshaft = reduce(np.logical_and, (np.sqrt(x**2+z**2)<_D_shaft, y<_H_shaft))\nza.set_group(shaft, \"shaft\") # set the zones with shaft = true have \"shaft\" and \"geometry\"\nprint(za.in_group(\"shaft\").sum(), \"zones in shaft group.\") #output how many zones are in the corner group\n\nplate = reduce(np.logical_and, (x<_B_footing,z<_B_footing, y>_H_shaft,y<_D_footing))\nza.set_group(plate, \"plate\") # set the zones with plate = true have \"plate\" and \"geometry\"\nprint(za.in_group(\"plate\").sum(), \"zones in plate group.\") #output how many zones are in the corner group\n\n# CONSTITUTIVE MODEL #\n\n#it.command(\"\"\"\n#zone cmodel assign strain-softening range group \"Radial Tunnel1\"\n#zone property density 2500 bulk 2e8 shear 1e8 range group \"Radial Tunnel1\"\n#zone property cohesion 2e6 friction 45 tension 2e5 dilation 10 range group \"Radial Tunnel1\"\n#zone property table-friction 'fri' table-cohesion 'coh' table-dilation 'dil' range group \"Radial Tunnel1\"\n#table 'fri' add (0, 45) (.05, 42) (.1, 40) (1, 40)\n#table 'coh' add (0,2e6) (.05,1e6) (.1,5e5) (1,5e5) \n#table 'dil' add (0, 10) (.05,  3) (.1,  0)\n#\"\"\")\n\nit.command(\"\"\"\nzone cmodel assign elastic range group \"Radial Tunnel1\"\nzone cmodel assign elastic range group 'shaft'\nzone cmodel assign elastic range group 'plate'\n\nfish define fname(E_o,const)\nloop foreach pnt zone.list\nz_depth = zone.pos.y(pnt)\nE = E_o+const*math.sqrt(z_depth)\nzone.prop(pnt,'young')=E\nend_loop\nend\n@fname({E_o_},{const_})\nzone property poisson {poisson_}\nplot item create zone contour property name 'young'\n\"\"\".format(E_o_=_E_o,const_=_const,poisson_=_poisson))\n\nit.command(\"\"\"\nzone property bulk {bulk}  shear {shear} range group 'shaft'\nzone property bulk {bulk}  shear {shear} range group 'plate'\n\"\"\".format(bulk=_bulk,shear=_shear))\n\n#soil = za.in_group(\"Radial Tunnel1\")\n# list(gp.list)\n# gp.isgroup(::gp.list,\"North\")\n# gp.force.unbal(::ad)\n# [ad = list(gp.list)(gp.isgroup(::gp.list,\"North))]"},{"path":"theory.html","id":"theory","chapter":"7 Theory","heading":"7 Theory","text":"","code":""},{"path":"theory.html","id":"structural-elements-1","chapter":"7 Theory","heading":"7.1 Structural Elements","text":"Structural elements include beams, cables, piles, shells, geogrids, \nliners. can either independent , coupled , grid.\nFull dynamic equations motion solved (Lagrangian solution\nprocedure opposed implicit matrix-inversion procedure).Section organization: 1. means SEL created joined 2.\nBoundary Initial Conditions, Local Coord Sys. 3. Damping, Thermal,\nMaterial Properties 4. Mechanical behaviorFurther, detailed discussion General Formulation \nStructural-Element Logic provides complex interaction btw SEL \ngrid.","code":""},{"path":"theory.html","id":"types-of-sel","chapter":"7 Theory","heading":"7.1.1 Types of SEL","text":"Beam : 2-noded, straight finite element 6 dof per node, 3\ntransl, 3 rot, behaves LE matl w failure limit. Beam\nelements may rigidly connected grid st forces bending\nmoments develop within beam grid deforms. Beam Structural\nElements — Beam structural elements two-noded, straight,\nfinite elements six degrees freedom per node: three\ntranslational components, three rotational components. \nphysical beam (.e., arbitrarily curved, beam structure \nisotropic material bisymmetrical cross-section) can modeled\ncollection beam elements. element behaves linearly\nelastic material failure limit; however, possible \nintroduce limiting plastic moment, even plastic hinge (across\ndiscontinuity rotation may develop), elements. Beam\nelements may rigidly connected grid forces \nbending moments develop within beam grid deforms, \nmay loaded point distributed loads. Beam elements \nused model structural-support members bending resistance\nlimited bending moments occur, including support struts \nopen-cut excavation general framed structures loaded point \ndistributed loads.Cable Structural Elements — Cable structural elements \ntwo-noded, straight, finite elements one axially oriented\ntranslational degree--freedom per node. physical cable (.e., \narbitrarily curved, cable structure isotropic material) can \nmodeled collection cable elements. element can yield \ntension compression, resist bending moment. \nshear-directed (parallel cable axis) frictional interaction\noccurs cable grid. cable may anchored \nspecific point grid, grouted force develops along\nlength response relative motion cable \ngrid. Cables may also point-loaded pretensioned. Cable\nelements used model wide variety structural-support\nmembers tensile capacity important, including cable\nbolts tiebacks.Pile Structural Elements — Pile structural elements two-noded,\nstraight, finite elements six degrees freedom per node. \nphysical pile can modeled collection pile elements. \nstiffness matrix pile element identical beam\nelement; however, addition providing structural behavior\nbeam, normal-directed (perpendicular pile axis)\nshear-directed (parallel pile axis) frictional\ninteraction occurs pile grid. sense,\npiles offer combined features beams cables. addition\nskin-friction effects, end-bearing effects can also modeled\n(see Axially Loaded Pile). Piles may loaded point \ndistributed loads. Pile elements used model\nstructural-support members, foundation piles, \nnormal- shear-directed frictional interaction rock \nsoil mass occurs. special material model also available \nextension pile element simulate behavior rockbolt\nreinforcement. model includes ability account \nchanges confining stress around reinforcement,\nstrain-softening behavior material structural\nelement grid, tensile rupture element.Shell Structural Elements — Shell structural elements \nthree-noded, flat finite elements. Five finite-element types (2\nmembrane elements, 1 plate-bending element 2 shell elements) \navailable. physical shell (.e., arbitrarily curved, shell\nstructure either isotropic orthotropic material) can \nmodeled faceted surface composed collection shell\nelements. structural response shell controlled \nfinite-element type (resist membrane loading , bending\nloading , membrane bending loading). shell\nelement behaves isotropic orthotropic, linearly elastic\nmaterial failure limit; however, one can introduce \nplastic-hinge line (across discontinuity rotation may\ndevelop) along edges elements, using \ndouble-node procedure applied beams. Shell elements may \nrigidly connected grid stresses develop within \nshell grid deforms, may loaded point loads \nsurface pressures. Shell elements used model structural\nsupport provided thin-shell structure \ndisplacements caused transverse-shearing deformations can \nneglected.Geogrid Structural Elements — Geogrid structural elements \nthree-noded, flat, finite elements assigned \nfinite-element type resists membrane resist\nbending loading. physical membrane can modeled collection\ngeogrid elements. geogrid elements behaves isotropic \northotropic, linearly elastic material failure limit. \nshear-directed (tangent plane geogrid surface)\nfrictional interaction occurs geogrid FLAC3D\ngrid, geogrid slaved grid motion normal\ndirection. geogrid can anchored specific point \nFLAC3D grid, attached stress develops along surface\nresponse relative motion geogrid FLAC3D\ngrid. geogrid can thought two-dimensional analog \none-dimensional cable. Geogrid elements used model flexible\nmembranes whose shear interaction soil important, \ngeotextiles geogrids.Liner Structural Elements — Liner structural elements \nthree-noded, flat finite elements can assigned \nfive finite-element types available shell elements. physical\nliner can modeled collection liner elements \nattached surface FLAC3D grid. addition providing\nstructural behavior shell, shear-directed (tangent\nplane liner surface) frictional interaction occurs \nliner FLAC3D grid. Also, normal direction, \ncompressive tensile forces can carried, liner may\nbreak free (subsequently come back contact ) \ngrid. Liner elements used model thin liners \nnormal-directed compressive/tensile interaction shear-directed\nfrictional interaction host medium occurs, \nshotcrete-lined tunnels retaining walls.option allows interaction FLAC3D grid sides \nliner available liner element.","code":""},{"path":"theory.html","id":"joining","chapter":"7 Theory","heading":"7.1.1.1 Joining","text":"using struct cable create command, nodes lie within\nzones, nodes linked zones, link\nproperties set consistent corresponding element\nbehavior.Specifying one segment improves accuracy, especially \npiles cables interacting host mediumIn case, distribution shear forces along pile cable \nfunction number nodes. - Try provide approx. 1 node \nzone, since zones constant-stress regions. necessary \none interaction point within zone. - Try provide 2~3\ncable elements within development length cable. development\nlength determined dividing specified yield strength F \ngrout cohesive strength c. following procedure, failure \n“pull-” can occur conditions arise. cable elements \nlong, yield failure mode element possible.","code":""},{"path":"theory.html","id":"joining-sel-to-one-another","chapter":"7 Theory","heading":"7.1.2 Joining SEL to one another","text":"SEL can joined sharing node one nodes\nlinked another zone. two elements share node,\nforces moments transferred btw elements node. \nnecessary limit forces, two separate nodes may created \nconnected node--node link set appropriate attachment\nconditions set.Two structure beam create commands create 2 nodes 1 geometric\nlocation specify two separate IDs. Forces moments \ntransferred btw adjoining elements; instead, forces wil \ntransmitted surrounding zone common location.","code":""},{"path":"theory.html","id":"interface-1","chapter":"7 Theory","heading":"7.2 Interface","text":"several instances geomechanics desirable \nrepresent planes sliding separation can occur. \n[example:\\\\](example:\\){.uri}joint, fault, bedding planes geologic medium;interface foundation soil;contact plane bin chute material \ncontains;contact two colliding objects; anda planar “barrier” space, represents fixed,\nnon-deformable boundary arbitrary position orientation.FLAC3D provides interfaces characterized Coulomb sliding\n/tensile shear bonding. Interfaces properties \nfriction, cohesion, dilation, normal shear stiffnesses, tensile\nshear bond strength. Although restriction number\ninterfaces complexity intersections, generally\nreasonable model simple interfaces FLAC3D\nawkward specify complicated interface geometry. \nprogram 3DEC (Itasca 2007) specifically designed model many\ninteracting bodies three dimensions; used instead \nFLAC3D complicated interface problems.Interfaces may also used join regions different zone\nsizes. general, zone attach command used join grids\ntogether. However, circumstances, may convenient \nuse interface purpose. case, interface \nprevented sliding opening correspond \nphysical entity.","code":""},{"path":"theory.html","id":"formulation","chapter":"7 Theory","heading":"7.3 Formulation","text":"FLAC3D represents interfaces collections triangular elements\n(interface elements), defined three nodes (interface\nnodes). Interface elements can created location space.\nGenerally, interface elements attached zone surface face; two\ntriangular interface elements defined every quadrilateral zone\nface. Interface nodes created automatically every interface\nelement vertex. another grid surface comes contact \ninterface element, contact detected interface node \ncharacterized normal shear stiffnesses, sliding properties.interface element distributes area nodes weighted\nfashion. interface node associated representative area. \nentire interface thus divided active interface nodes\nrepresenting total area interface. Figure 1 illustrates \nrelation interface elements interface nodes, \nrepresentative area associated individual node.important note interfaces one-sided FLAC3D. (\ndiffers formulation two-sided interfaces two-dimensional\nFLAC (Itasca 2011).) may helpful think FLAC3D interfaces \n“shrink-wrap” stretched desired surface, causing \nsurface become sensitive interpenetration face \nmay come contact.fundamental contact relation defined interface node\nzone surface face, also known target face. normal\ndirection interface force determined orientation \ntarget face.timestep, absolute normal penetration relative\nshear velocity calculated interface node contacting\ntarget face. values used interface\nconstitutive model calculate normal force shear-force vector.\nconstitutive model defined linear Coulomb shear-strength\ncriterion limits shear force acting interface node,\nnormal shear stiffnesses, tensile shear bond strengths, \ndilation angle causes increase effective normal force \ntarget face shear-strength limit reached. default, pore\npressure used interface effective stress calculation. \noption can activated/deactivated using command zone interface\neffective command setting effective = /. Figure 2 illustrates\ncomponents constitutive model acting interface node (P):normal shear forces describe elastic interface response\ndetermined calculation time \\((t + \\Delta t)\\) using relations:\\[ F_n^{(t + \\Delta t)} = k_n u_n + \\sigma_n  \\]\n\\[ F_{si}^{(t + \\Delta t)} = F_{si}^{(t)} + k_s \\Delta u_{si}^{(t + 0.5 \\Delta t)} + \\sigma_{si} \\]inelastic interface logic works following way:Bonded interface — interface remains elastic stresses\nremain bond strengths; shear bond strength, \nwell tensile bond strength. normal bond strength set\nusing tension interface property keyword. command zone\ninterface node property shear-bond-ratio = sbr sets shear bond\nstrength sbr times normal bond strength. default value \nproperty shear-bond-ratio (given) 100.0. bond breaks\neither shear stress exceeds shear strength, \ntensile effective normal stress exceeds normal strength. Note\ngiving property shear-bond-ratio alone cause bond \nestablished—tensile bond strength must also set.Bonded interface — interface remains elastic stresses\nremain bond strengths; shear bond strength, \nwell tensile bond strength. normal bond strength set\nusing tension interface property keyword. command zone\ninterface node property shear-bond-ratio = sbr sets shear bond\nstrength sbr times normal bond strength. default value \nproperty shear-bond-ratio (given) 100.0. bond breaks\neither shear stress exceeds shear strength, \ntensile effective normal stress exceeds normal strength. Note\ngiving property shear-bond-ratio alone cause bond \nestablished—tensile bond strength must also set.Slip bonded — intact bond, default, prevents yield\nbehavior (slip separation). optional property switch\n(bonded-slip) causes separation prevented \nbond intact (allows shear yield, control \nfriction cohesion parameters, using (F_n) normal force).\ncommand allow/disallow slip bonded interface segment \nzone interface node setting bonded-slip .Slip bonded — intact bond, default, prevents yield\nbehavior (slip separation). optional property switch\n(bonded-slip) causes separation prevented \nbond intact (allows shear yield, control \nfriction cohesion parameters, using (F_n) normal force).\ncommand allow/disallow slip bonded interface segment \nzone interface node setting bonded-slip .default state bonded-slip (given) .Coulomb sliding — bond either intact broken. \nbroken, behavior interface segment determined \nfriction cohesion (course stiffnesses). \ndefault behavior, bond strengths set (zero). broken\nbond segment take effective tension (may occur \ncompressive normal force, pore pressure greater). \nshear force zero (nonbonded segment) effective\nnormal force tensile zero.Coulomb shear-strength criterion limits shear force \nrelation:\\[ F_{smax} = c + tan\\phi (F_n - pA)\\] sliding, shear\ndisplacement may cause increase effective normal stress \njoint, according relation:\\[\\sigma_n := \\sigma_n + \\frac{|F_s|_o - F_{smax}}{k_s} tan\\psi k_n\\]printout (see zone interface node list command ) value \ntension denotes whether bond intact broken (set) —\nnonzero zero, respectively.normal shear forces calculated interface nodes \ndistributed equal opposite directions target face \nface interface node connected (host face).\nWeighting functions used distribute forces gridpoints\nface. interface stiffnesses added accumulated\nstiffnesses gridpoints sides interface order \nmaintain numerical stability.Interface contacts detected interface nodes, contact\nforces transferred interface nodes. stress state\nassociated node assumed uniformly distributed \nentire representative area node. Interface properties \nassociated node; properties may vary node node.default, effect pore pressure included interface\ncalculation using effective stress basis slip\ncondition. (interface pore pressure interpolated target\nface.) applies model configure fluid mode, pore pressures\nassigned zone water zone gridpoint initialize\npore-pressure command without specifying model configure fluid. user\ncan switch options interface s using zone interface effective\ncommand setting effective . default FLAC3D\nlogic, fluid flow (saturated unsaturated) carried across \ninterface, provided interface keyword maximum-edge used \nparticular interface. permeable interface option can \ndeactivated/reactivated interface s using zone interface\npermeability command setting effective . Note \nkeyword maximum-edge used zone interface element\ncommand, permeability particular interface, warning \nissued inform user interface considered \nimpermeable fluid flow. (Note fluid flow calculation , \nmechanical model must present. Also, model cycle 0 command \nmodel mechanical active used initialize weighting\nfactors used transfer fluid flow information across interface.)\npressure drop normal joint influence normal\ndisplacement pore pressure calculated.Also, flow fluid along interface modeled.","code":""},{"path":"theory.html","id":"creation-of-interface-geometry","chapter":"7 Theory","heading":"7.4 Creation of Interface Geometry","text":"Interfaces created zone interface create command. cases\ninterface two separate grids model \nrequired, zone interface create -face command used \nattach interface one grid surfaces. command generates\ninterface elements interface s along surface zone faces \ncenter point fall within specified range. surfaces \ninterface created must generated initially; must \npossible specify existing surface order create interface\nelements. gap must specified two adjacent surfaces, unless\nzone interface create -face command separate keyword \ngiven. case, separate sub-grids may surface gridpoints\nlocation space.default, two interface elements created zone face. \nnumber interface elements can increased using zone\ninterface s element maximum-edge v command. [1] causes \ninterface elements edge lengths larger v subdivide \nsmaller elements lengths smaller v. command\ncan used increase resolution decrease arching forces \nportions model large contrasts zone size across \ninterface.Several rules followed using interface elements \nFLAC3D:smaller surface area contacts larger surface area (e.g., \nsmall block resting large block), interface \nattached smaller region.difference zone density two adjacent grids,\ninterface attached grid greater zone\ndensity (.e., greater number zones within area).size interface elements always equal smaller\ntarget faces come contact. \ncase, interface elements subdivided\nsmaller elements.Interface elements limited grid surfaces \nactually come contact another grid.\nsimple example illustrating procedure interface creation\nprovided “DippingJoint.f3dat.” corresponding project file,\n“DippingJoint.f3prj,” located folder “datafiles\nInterfaceDippingJoint.” example block specimen containing \nsingle joint dipping angle \\(45°\\)","code":"; Create interface elements on the top surface of the base        \nzone interface 'joint' create by-face separate range group 'Top' group 'Base'\nmodel save 'int1'\nreturn"},{"path":"theory.html","id":"typical-properties","chapter":"7 Theory","heading":"7.5 Typical Properties","text":"Post-Failure Properties many instances, particularly mining\nengineering, response material failure initiated \nimportant factor engineering design. Consequently, \npost-failure behavior must simulated material model. \nFLAC3D, accomplished properties define four types \npost failure response: 1. shear dilatancy; 2. shear hardening/softening;\n3. volumetric hardening/softening; 4. tensile softening. \nproperties activated failure initiated, defined \nMohr-Coulomb relation tensile-failure criterion. Shear\ndilatancy simulated Mohr-Coulomb, ubiquitous-joint \nstrain-softening MohrCoulomb ubiquitous-joint models. Shear\nhardening/softening simulated strain-softening Mohr-Coulomb\nubiquitous-joint models, volumetric hardening/softening \nsimulated modified Cam-clay model. Tensile softening \nsimulated strain-softening Mohr-Coulomb ubiquitous-joint\nmodels","code":""},{"path":"theory.html","id":"shear-dilatancy","chapter":"7 Theory","heading":"7.5.1 Shear Dilatancy","text":"Shear dilatancy, dilatancy, change volume occurs \nshear distortion material. Dilatancy characterized dilation\nangle, , related ratio plastic volume change \nplastic shear strain. angle can specified Mohr-Coulomb\nubiquitous-joint strain-hardening/ softening models FLAC3D.\nDilation angle typically determined triaxial tests shear-box\ntests. example, idealized relation dilatancy, based upon \nMohr-Coulomb failure surface, depicted triaxial test \nfigure . dilation angle found plot volumetric\nstrain versus axial strain. Note initial slope plot\ncorresponds elastic regime, slope used measure \ndilation angle corresponds plastic regimeSelected Strength Properties (drained, laboratory-scale) Soils\n(Ortiz et al. 1980)","code":""},{"path":"theory.html","id":"compression-test-on-strain-softening-material","chapter":"7 Theory","heading":"7.5.2 Compression Test on strain-softening material","text":"horizontal stress-displacement response monitored , shown\nimage . test produces distinct peak residual\nfailure stress levelsThe strain-softening model assumes brittle softening (due \nreduction cohesion) gradual softening (due reduction \nfriction angle). selection properties discussed \nMaterial Properties. Comparison two images illustrates \ndifferent responses two models. initial response \nonset failure identical, postfailure behavior quite\ndifferent. Clearly, data required use strain-softening\nmodel , typically, softening model must calibrated \nspecific problem.","code":"model new\n; Create zones\nzone create cylinder point 0 (0,0,0) point 1 (1,0,0) point 2 (0,2,0) ...\npoint 3 (0,0,1) size 4 5 4\nzone reflect normal (1,0,0)\nzone reflect normal (0,0,1)\n; Constitutive Model and properties\nzone cmodel assign strain-softening\nzone property bulk 1.19e10 shear 1.1e10\nzone property cohesion 2.72e5 friction 44 tension 2e5\nzone property table-cohesion 'coh' table-friction 'fri'\ntable 'coh' add (0,2.72e5) (1e-4,2e5) (2e-4,1.5e5) (3e-4,1.03e5) (1,1.03e5)\ntable 'fri' add (0,44) (1e-4,42) (2e-4,40) (3e-4,38) (1,38)\n; Boundary Conditions\nzone face apply velocity (0, 1e-7,0) range position-y 0\nzone face apply velocity (0,-1e-7,0) range position-y 2\n; Histories\nzone history displacement-y position (0,0,0)\nzone history stress-yy position (0,1,0)\nzone history stress-yy position (1,1,0)\nmodel step 3000\nmodel save 'Softening'"},{"path":"command.html","id":"command","chapter":"8 Command","heading":"8 Command","text":"","code":""},{"path":"command.html","id":"interface-2","chapter":"8 Command","heading":"8.1 Interface","text":"","code":""},{"path":"command.html","id":"zone-face-group","chapter":"8 Command","heading":"8.1.1 zone face group","text":"Example:Adds group name ‘wall’ zone faces included optional range.\nAlso can used zone face group “slotname = groupname” Zone face\nmay belong many groups, 128. keywords: internal, , remove.\n- internal: select faces.\nspecified, range looks internal faces well surface\nfaces.: considered inside surface conditions \nnon-null model.: considered inside surface conditions \nnon-null model.remove: group removed zone face.remove: group removed zone face.","code":"zone face group s keyword ... <range> zone face group 'wall' internal range group 'wall-c' group 'pile'"},{"path":"command.html","id":"zone-face-skin","chapter":"8 Command","heading":"8.1.2 zone face skin","text":"Generates contiguous face groups skinning.“skinning” refers automatic face group generation, occurs \nfollows: program looks contiguous faces puts \nautomatically named groups within slot named skin. Two faces \nconsidered contiguous angle two faces exceeds break\nangle, two faces belong different groups according \ncommand’s slot specification. Unless internal specified, \noperation zone face skin restricted external faces. zone\nfaces zone side, hidden zone \nside considered surface faces. use-hidden-zones used, within\nspecified range included consideration.group names generated follows: sEast, sWest, sNorth, sSouth,\nsTop, sBottomInternal faces assigned names group either side \nchanged order create .","code":"zone face skin"},{"path":"command.html","id":"zone-separate","chapter":"8 Command","heading":"8.1.3 zone separate","text":"separates internal faces specified range. gridpoints \nface duplicated, new face created. New faces gridpoints\nget copies group extra variable assignments belonging \noriginal face gridpoint.Example: Fred George group names assigned zones, thenwill select faces connected zone group Fred \nGeorge.keyword: - -face: attempts separate internal faces range\n- new-side group: newly created faces assigned group name \nspecified slot. default slot, named Default.","code":"zone separete by-face new-side group 'iwall' slot 'int' range group 'wall' or 'base'range group 'Fred' group 'George'"},{"path":"command.html","id":"zone-interface-create","chapter":"8 Command","heading":"8.1.4 zone interface create","text":"creates nodes elements interface sideThere two techniques creating interface. 1. derive \ninterface range zone faces using -face keyword. 2. \nspecify triangular interface element 3 points. 3. Command may\nalso used construct interface node may used \nelement keyword.keyword: - -face: interface elements created surface zone\nfaces within specified range. error occur \ninterface elements interface already exist selected\nfaces. optional separate keyword used, internal zone\nfaces selected range. list selected faces \nautomatically separated (zone separate) interface elements\nplaced one side. following separate keyword:\nnew-side-origin, clear-attach.element point keyword … : create triangular interface element\nspecifying 3 points. Three verticies must specified \nfollowing keyword. point can created located space\nusing position keyword, existing interface node ID \nmay specified. interface element created \nattached grid face even location corresponds \nface. element fixed space. active side \nelement defined walking around edge element, \npoint 1 point 2 point 3; active side walking \nclockwise direction.point element, one following two keywords must \nsupplied: node , position v.node v : creates interface node position v. node\nalready exists selected location, error reported. \ncreated node fixed space.","code":"zone interface 'side' create by-face range group 'wall' and 'iwall'\n\nzone interface 'side' node property stiffness-normal 1e8 stiffness-shear 1e8 friction 20 cohesion 30000"},{"path":"command.html","id":"range","chapter":"8 Command","heading":"8.1.5 range","text":"Logical Operations Range Phrase range phrase targets set \nobjects specifying one range elements (keywords \nfollow range keyword command). multiple range elements \nspecified, final set objects returned range phrase \n, default, intersection separate range elements.union keyword may specified anywhere within range phrase \nreturn range union present range elements.keyword may used end particular range element \nreturn inverse objects specified element. \nkeyword must appear end range element specification (e.g.,\nrange position-x 0 100 position-y 0 100 ).keyword extent used, extent object (rather \nobject centroid) used verify whether object within \nrange. keyword applied geometric range elements (e.g.,\nsphere).Logical Operations & Named RangesUsing named-range keyword, existing named range may inserted\nrange phrase treated range element within range\nphrase. Consequently logical operations described work \nnamed range exactly range elements. See next topic,\nNamed Ranges, information.","code":""},{"path":"command.html","id":"named-ranges","chapter":"8 Command","heading":"8.1.5.1 Named Ranges","text":"Creating named range provides easy-access method subsequent use\nrange. Range creation performed using model range command\nfollows:model range create ‘fred’ position-x 5 500 id 100 200 group ‘external’\ngeometry group edge ‘mainedges’ range named-range ‘fred’ \nequivalent :geometry group edge ‘mainedges’ range position-x 5 500 … id 100 200\ngroup ‘external’ Note , former case, range fred \nreused without retyping range elements.Named Ranges vs. GroupsNamed ranges groups close effect. Either used range\nelements within range. However, named range still range, \nmeans use possible return different objects,\ndepending range elements define state model.\ncontrast, repeated uses group within range return \nobjects time. group must altered return\ndifferent objects.","code":""},{"path":"pull-test.html","id":"pull-test","chapter":"9 Pull-Test","heading":"9 Pull-Test","text":"","code":""},{"path":"simulation-of-pull-tests-for-fully-bonded-rock-reinforcement.html","id":"simulation-of-pull-tests-for-fully-bonded-rock-reinforcement","chapter":"10 Simulation of Pull-Tests for Fully Bonded Rock Reinforcement","heading":"10 Simulation of Pull-Tests for Fully Bonded Rock Reinforcement","text":"Problem StatementThe common method determine properties fully bonded rock\nreinforcement (grouted cable bolts, resin-grouted steel rebar,\n\nrockbolts) perform pull-tests small segments grouted\nreinforcement\nfield. Typically, segments 50 cm length longer grouted\n\nboreholes. ends segments pulled jack mounted \n\nsurface tunnel connected cable via barrel--wedge-type\nanchor.\nforce applied reinforcement deformation \nreinforcement\nplotted produce axial force-deflection curve. curve,\n\npeak shear strength grout bond determined. results \npull-tests\none-half meter segments several types cables illustrated \nFig 1. plots expressed terms\ntons/m versus deformation mm.Figure 1: Field results pull-tests various types \ncables bond length 0.5 m water/cement ratio 1/3.example application, FLAC3D used \nmodel pull-tests type. Two different approaches available \nsimulate pull-tests using structural elements FLAC3D:cable elements, assume grout behaves \nelastic-perfectly\nplastic material confining stress dependence loss \nstrength \nfailure; andcable elements, assume grout behaves \nelastic-perfectly\nplastic material confining stress dependence loss \nstrength \nfailure; andmodified pile elements, account changes confining\nstress,\nstrain-softening behavior grout, rupture \nreinforcement.modified pile elements, account changes confining\nstress,\nstrain-softening behavior grout, rupture \nreinforcement.One additional advantage using modified pile elements model\nreinforcement behavior bending moment resistance can \nincluded. \nbehavior needed reinforcement subjected shearing, \ndescribed\nlater Pull-Test Tensile\nRupture Shear Test \nRockbolts.purpose following examples demonstrate use \ncapabilities approaches.Approach 1: Modeling Rock Reinforcement Using Cable\nElementsIn following sections, pull-tests simulated using \ncable-element logic. commands needed create view variables\nassociated\ncable elements described Cable\nCommands.Pull-Strength without\nConfinementFirst, consider case confining stress dependence \nreinforcement shear-bond strength may neglected. cable properties\nrequired FLAC3D’s cable-bolt model must \nextracted field pull-test curve. easily done \nfield\ntest data presented terms force/unit length versus\ndeformation, \nshown Figure 1. Assuming yielding \ncable, value grout shear stiffness, grout-stiffness, \nsimply slope curve, \nultimate bond strength, grout-cohesion, \npeak-pull strength value per unit length. assumption justified\n\nfact steel normally yields stresses higher \n\ncorresponding pull-forces, shown Figure\n1. example, representative\ncable 15 mm diameter 0.5 m length (admissible) yield\nstrength \n1200 MPa (assumed FLAC3D models \nfollowing sections), maximum yield force 212 kN. value \napproximately 50% greater highest pull-force 28 tons/m ×\n0.5 =\n140 kN, grout fails Figure\n1. addition, examples, \ncompliance reinforcement\nelement rock neglected relative compliance \ngrout.example, pull-test results shown roughly \n\nloading slope, average value grout-stiffness\nchosen :value grout-stiffness low,\nindicating rather poor grouting job cable. Typical\ngrout-stiffness values approximately one order \nmagnitude higher .value grout-cohesion single 15.2 mm\nwire simply peak shear resistance tons/m. case,\ngrout-cohesion17.5 tons/m, 17.5 × 104 N/m. check whether value \ngrout-cohesion reasonable, can converted grout\nshear strength dividing approximate surface area wire\n(assuming\nbond fails grout/cable interface). find peak\nshear\nstrength 3.66 MPa. value roughly equal half uniaxial\ncompressive strength grout, indicating either poor grout,\n\ncable allowed rotate pull-test, yielding\nartificially low\ngrout shear-strength values.data file “Pull01.f3dat” simple\nrepresentation\npull-test using FLAC3D. cable end-node \npulled small, constant y-oriented velocity—see Figure\n2. FISH\nfunction used sum reaction forces monitor nodal\ndisplacement\ngenerated pull-tests comparison field test results.Figure 2: Sketch geometry FLAC3D model pull-test.plot relation pull force cable displacement\n(histories\nforce\n\ndisp,\nrespectively) \ncase single 15.2 mm cable shown Figure\n3. figure illustrates general\nforce-displacement behavior given \nFigure 1. peak force reached \ndisplacement approximately 17 mm. point, cable \nsimply\npulled borehole much fashion block sliding\n\nplane.Figure 3: Pull force N/m versus cable displacement meters\ncase single 15.2 mm grouted cable.Figure 4 6\nshow axial force distribution cable displacements 10\nmm, 16.5\nmm, 17.5 mm, respectively. Note cable-bond slip progresses\nrapidly\npeak strength reached first cable element. Superimposed\n\naxial forces locations grout bond yielding. 10 mm\n(Figure 4), grout bond failed. 16.5\nmm\n(Figure 5), bond failure initiated rapidly\npropagates (Figure 6) entire cable\nlength. stage, force cable end simply sum \ngrout_cohesionis length cable segments) n-slipping\nsegments. embedded length long enough, cable axial force\n\neventually reach yield force cable . cable \n\nbreak extension strain equals ultimate breaking strain \ncable\n(generally around 3%). example illustrating tensile rupture \nelement \ngiven Pull-Test Tensile\nRupture.breakFigure 6: 17.5 mm deformation: Plot axial force cable\ngrout yield points pull-test simulation 15.2 mm cable bolt.Pull-Strength \nConfinementThe cable shear bond strength , general, increase increasing\neffective pressure (p’) acting cable. linear law\nimplemented FLAC3D whereby cable shear\nbond strength defined constant (grout-cohesion) plus \neffective pressure cable\nmultiplied cable perimeter (grout-permeter)\ntimes tangent friction angle (grout-friction). pressure\ndependence activated\nautomatically FLAC3D issuing cable\nproperties grout-permeter grout-friction. Note case,\ninput data \ngrout-cohesion must correspond shear bond\nstrength cable pull-test carried without confining pressure.\nNumerical\nresults pull-tests 15.2 mm cable presented Figure\n7 8 \nfriction angle 30° two levels initial confining pressure,\nnamely p’ = 2 4 MN/m2. Compare figures Figure\n3. figures indicate increasing\nfailure level increasing initial confining pressure, illustrating\n\nfrictional character cable-rock interface. Results \npull-test \nconfined pressure 15.2 mm cable obtained using data\nfiles “Pull02.f3dat”\n“Pull03.f3dat.”breakFigure 7: Pull-test 15.2 mm cable, p’\n= 2 MN/m2.Figure 8: Pull-test 15.2 mm cable, p’\n= 4 MN/m2.Approach 2: Modeling Rock Reinforcement Using Modified Pile\nElementsIn following sections, modified pile-element logic FLAC3D \nused model rock reinforcement. purpose \nfollowing examples illustrate modeling procedures \nmodified\npile elements. addition demonstration features \nsimulate\npull-tests, section also presents examples related \nsimulation \nshear tests rockbolts (see Shear Test \nRockbolts \nShear\nTest Rockbolts Rupture). \ntests section assume\nconditions representative 25 mm diameter grouted bolt \ngrout\nproperties defined Pull-Strength without\nConfinement.Commands needed create view variables associated \nmodified\nelements described Pile\nCommands.\nNote modified pile-element formulation \nactivated giving structure\npile property\nrockbolt-flag\n\ncommand.Pull-Strength without\nConfinementThe data file “Pulltest04.f3dat” creates pull-test\nwithout confinement. problem equivalent described \nPull-\nStrength without Confinement. Compared \nmodel file “Pulltest01.f3dat,” current\nmodel\nconsiders larger diameter bolt free length bolt extends\n\nblock. load applied tip reinforcement \nprescribing \nconstant velocity, done . FISH\nfunction,\nforce,\nused sum \nreaction forces monitor nodal displacement generated \npull-test.Figure 9 represents relation axial\nforce (per unit length cable) displacement tip \nbolt, \ntotal displacement 20 mm. figure shows maximum pull-\nload \ncomparable one obtained Approach 1 Pull-Strength\nwithout\nConfinement (slight difference may \nattributed different\nbolt size free length bolt included model). Figure\n9 also shows default perfectly plastic\nbehavior grout maximum cohesion exceeded.Figure 9: Pull force N/m versus cable displacement meters\ncase single 25 mm grouted rockbolt.Pull-Test Displacement\nWeakeningThe data file “Pulltest05.f3dat” defines pull-test\nsimilar one described previous section, Pull-\nStrength without Confinement, \npost-peak weakening shear\nbond strength. bond strength softening grout defined \n\nkeyword coupling-cohesion-table, described [\nrelation shear displacement cohesion\nweakening prescribed table(Note softening\nfriction grout also defined using keyword\ncoupling-friction-table).Figure 10 represents relation axial\nforce (per unit length bonded reinforcement) displacement \ntip\nreinforcement total displacement 40 mm. figure\nclearly shows\nweakening cohesion maximum pull-load reached.Figure 10: Pull force N/m versus reinforcement displacement\nmeters case single 15.2 mm grouted reinforcement—\ndisplacement weakening.Pull-Test ConfinementThe data file “Pulltest06.f3dat” shows \npull-test\nconfinement simulated using modified pile logic. model\n\nequivalent one discussed Pull-Strength \nConfinement, time confining\nstress, 4 MN/m2. \ndescribed Behavior\nShear Coupling\nSprings\nlinear law implemented modified\npile logic, whereby reinforcement shear strength defined \nconstant\n(coupling-cohesion-shear) plus effective pressure\nreinforcement multiplied reinforcement perimeter\n(perimeter) times friction angle (coupling-friction-shear). \npressure dependence \nactivated automatically FLAC3D issuing \nreinforcement properties (perimeter) (coupling-friction-shear).Figure 11 represents relation axial\nforce (per unit length grouted reinforcement) displacement \ntip\nreinforcement total displacement 40 mm. results \ncomparable shown Figure 8.Figure 11: Pull force N/m versus reinforcement axial\ndisplacement meters case single 25 mm grouted\nbolt—uniform 4\nMN/m2 confinement.Pull-Test Confinement — User-Defined BehaviorThis example shows use option coupling-confining-table \ndefine “mean” value σc confining stress \nrockbolt cases principal stresses σx σy\nperpendicular axis rockbolt .Figure 12 shows results obtained\nnumerically relation confining deviatoric stresses\n\ncase rockbolt diameter 25 mm. figure, \nhorizontal axis\nrepresents normalized deviatoric stress, defined aswhile vertical axis represents normalized confining\nstress,relation obtained pull-test models FLAC3D, considering\ndifferent values deviatoric\nstresses plane perpendicular axis bolt. mean confining\nstressusing expressionThe data file “Pulltest07.f3dat” creates model \nillustrates use coupling-confining-table\noption relation represented Figure\n12. results obtained \ndata file shown Figure 13. example,\none principal stresses plane perpendicular axis \n\nrockbolt zero. Note pull-resistance Figure\n13 greatly reduced compared Figure\n11 result zero stress \nlateral direction.Figure 12: Example relation normalized confining\nstress normalized deviator stress obtained numerically 25 mm\nrockbolt.Figure 13: Rockbolt pull force N/m versus rockbolt axial\ndisplacement meters case single 25 mm grouted\nbolt—lateral\nconfinement defined relationship represented Figure\n12.Pull-Test Tensile\nRuptureThis example shows definition limiting axial yield force \nlimiting\naxial strain rockbolt, using options tensile-yield \ntensile-failure-strain, respectively.data file “Pulltest08.f3dat” sets model \nconsiders limiting tensile force 1.5 × 105 N limiting\naxial strain 1 × 10-4. results model shown \nFigureFigure #pulltest-pile5. diagram\nshows limiting\ntensile force reached pull-displacement approximately\n2.6 cm.\nNote limiting force reached, pull-force\nrapidly\ndecreases zero, indicating rupture rockbolt.Figure 14: Rockbolt pull force N/m versus rockbolt axial\ndisplacement meters case single 25 mm grouted\nbolt—tensile\nrupture.Shear Test RockboltsThis section next present two examples shear tests. tests\n\nsimilar pull-tests described , except velocity acting\n\nplane perpendicular axial direction bolt applied \ntop \nbolt.data file “Shear01.f3dat” shows \nmodel\ncreated. Note case shear test rockbolts, values\n\nstiffness strength normal coupling springs (\nneeded \npull-tests) need defined. Figure 15\nshows plot shear force versus shear displacement. select \nstiffness\nvalue 1010 N/m/m cohesive strength 108 MPa/m \norder illustrate shear behavior within shear displacement range\n6\nmm. values represent specific material \nadjusted \nfit experimental data.figure also includes view model test. large\ndisplacement rockbolt near rock surface result \nyielding\nnormal coupling springs, simulates crushing rock.Figure 15: Rockbolt shear force N versus rockbolt shear\ndisplacement meters case single 25 mm grouted bolt.Shear Test Rockbolts\nRuptureThe data file “Shear02.f3dat” presents model\nsimilar one described Shear Test \nRockbolts,\nadded option bending rupture. failure controlled\n\nspecified values limiting (yield) bending moment limiting tensile\nstrain\n(values assigned using keywords plastic-moment \ntensile-failure-strain, described Pile\nCommands).results obtained data file\n“Shear02.f3dat” shown Figure\n16. Note relation applied\nforce lateral displacement shows oscillation rupture.\n\noscillation normal response following sudden rupture \nbolt.","code":"Data Files\n\n**Pull01.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of pull-test for grouted reinforcement\n    ; ==================================================================\n    model new\n    fish automatic-create off\n    [global t =  'Pull Test for Grouted Cable Anchor ']\n    [t += '(no external confinement, fric=0)']\n    model title [t]\n    ; Create a single rock block and set its material properties.\n    zone create brick size 4 7 4 point 1 (0.4,0,0) point 2 (0,0.7,0) ...\n                                 point 3 (0,0,0.4)\n    zone cmodel assign elastic\n    zone property bulk 5e9 shear 3e9\n    ; Create a single cable and set its associated properties\n    struct cable create by-line (0.2,0.0,0.2) (0.2,0.5,0.2) segments 10\n    struct cable property cross-sectional-area 181e-6 young 98.6e9 ...\n                          yield-tension 0.232e6 grout-stiffness 1.12e7 ...\n                          grout-cohesion 1.75e5 grout-friction 0.0 ...\n                          grout-perimeter 7.85e-2\n    ; Fix free end of rock block and apply velocity to cable end\n    zone face apply velocity-normal 0 range position-y 0\n    struct node fix velocity-x                    range position-y 0\n    struct node initialize velocity-x -1e-6 local range position-y 0\n    call 'force' suppress ; FISH function to calculate reaction force on zones\n    ; Set up histories for monitoring model behavior\n    history interval 10\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-y component-id 1\n    ; Apply velocity to achieve total displacement of 2.0 cm\n    model cycle 10000\n    model save 'pull-1-1'\n    model cycle 6500\n    model save 'pull-1-2'\n    model cycle 1000\n    model save 'pull-1-3'\n    model cycle 2500\n    model save 'pull-1-4'\n\n**Pull02.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of pull-test for grouted reinforcement\n    ;     confinement 2 MPa\n    ; ==================================================================\n    model new\n    fish automatic-create off\n    model title 'Pull Test for Grouted Cable Anchor - Confinement 2 MPa, fric=30'\n    ; Create a single rock block and set its material properties.\n    zone create brick size 4 7 4 point 1 (0.4,0,0) point 2 (0,0.7,0) ...\n                                 point 3 (0,0,0.4)\n    zone cmodel assign elastic\n    zone property bulk 5e9 shear 3e9\n    zone initialize stress xx -2e6 zz -2e6\n    zone face apply stress-normal -2e6 range union position-x 0 ...\n                                             position-x 0.4 position-z 0 ...\n                                             position-z 0.4\n    ; Create a single cable and set its associated properties\n    struct cable create by-line (0.2,0.0,0.2) (0.2,0.5,0.2) segments 10\n    struct cable property cross-sectional-area 181e-6 young 98.6e9 ...\n                          yield-tension 0.232e6 grout-stiffness 1.12e7 ...\n                          grout-cohesion 1.75e5 grout-friction 30.0 ...\n                          grout-perimeter 7.85e-2\n    ; Fix free end of rock block and apply velocity to cable end\n    zone face apply velocity-normal 0 range position-y 0\n    struct node fix velocity-x range position-y 0\n    struct node initialize velocity-x -1e-6 local range position-y 0\n    call 'force' suppress ; FISH function to calculate reaction force on zones\n    ; Set up histories for monitoring model behavior\n    history interval 10\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-y component-id 1\n    ; Apply velocity to achieve total displacement of 4.525 cm\n    model cycle 45000\n    ;\n    model save 'pull-2'\n\n**Pull03.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of pull-test for grouted reinforcement\n    ;     confinement 4 MPa\n    ; ==================================================================\n    model new \n    fish automatic-create off\n    model title 'Pull Test for Grouted Cable Anchor - Confinement 4 MPa, fric=30'\n    ; Create a single rock block and set its material properties.\n    zone create brick size 4 7 4 point 1 (0.4,0,0) point 2 (0,0.7,0) ...\n                                 point 3 (0,0,0.4)\n    zone cmodel assign elastic\n    zone property bulk 5e9 shear 3e9\n    zone initialize stress xx -4e6 zz -4e6\n    zone face apply stress-normal -4e6 range union position-x 0 position-x 0.4 ...\n                                                   position-z 0 position-z 0.4\n    ; Create a single cable and set its associated properties\n    struct cable create by-line (0.2,0.0,0.2) (0.2,0.5,0.2) segments 10\n    struct cable property cross-sectional-area 181e-6 young 98.6e9 ...\n                          yield-tension 0.232e6 grout-stiffness 1.12e7 ...\n                          grout-cohesion 1.75e5 grout-friction 30.0 ...\n                          grout-perimeter 7.85e-2\n    ; Fix free end of rock block and apply velocity to cable end\n    zone face apply velocity-normal 0 range position-y 0\n    struct node fix velocity-x range position-y 0\n    struct node initialize velocity-x -1e-6 local range position-y 0\n    call 'force' suppress ; FISH function to calculate reaction force on zones\n    ; Set up histories for monitoring model behavior\n    history interval 10\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-y component-id 1\n    ; Apply velocity to achieve total displacement of 4.525 cm\n    model cycle 45000\n    ;\n    model save 'pull-3'\n\n**Pull04.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of pull-test for grouted reinforcement\n    ;   using modified pile elements\n    ; ==================================================================\n    model new \n    fish automatic-create off\n    model title 'Pull-test using modified pile elements'\n    ; Create a single rock block and set its material properties.\n    zone create brick size 4 4 6 point 1 (0.4,0,0) point 2 (0,0.4,0) ...\n                                 point 3 (0,0,0.6)\n    zone cmodel assign elastic\n    zone property bulk 5e9 shear 3e9\n    zone face apply velocity-normal 0.0 range position-z 0.6\n    ; Create a pile element and assign properties\n    struct pile create by-line (0.2,0.2,0.1) (0.2,0.2,0.7) segments 12\n    struct pile property rockbolt-flag on\n    struct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                         perimeter 0.08\n    struct pile property tensile-yield 2.25e5  ; ultimate tensile strength\n    struct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8 ; 0.25*pi*r^4\n    struct pile property coupling-cohesion-shear 1.75e5 ...\n                         coupling-stiffness-shear 1.12e7\n    struct pile property coupling-cohesion-normal 1.75e5 ...\n                         coupling-stiffness-normal 1.12e7\n    ; Set up pull out test\n    struct node fix  velocity-x range position-z 0.7\n    struct node init velocity-x 1e-6 local range position-z 0.7\n    call 'pileforce' suppress ; FISH function calculates reaction force on zones\n    ; Set up histories for monitoring model behavior\n    history interval 10\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-z position (0.2,0.2,0.7)\n    ; Achieve a total displacement of 2.0 cm\n    model cycle 20000\n    ;\n    model save 'pull-4'\n\n**Pull05.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of pull-test for grouted reinforcement\n    ;   using modified pile elements - Softening of cohesion\n    ; ==================================================================\n    model new \n    fish automatic-create off\n    model title 'Pull-test using modified pile elements - cohesion softening'\n    ; Create a single rock block and set its material properties.\n    zone create brick size 4 4 6 point 1 (0.4,0,0) point 2 (0,0.4,0) ...\n                                 point 3 (0,0,0.6)\n    zone cmodel assign elastic\n    zone property bulk 5e9 shear 3e9\n    zone face apply velocity-normal 0.0 range position-z 0.6\n    ; Create a pile element and assign properties\n    struct pile create by-line (0.2,0.2,0.1) (0.2,0.2,0.7) segments 12\n    struct pile property rockbolt-flag on\n    struct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                         perimeter 0.08\n    struct pile property tensile-yield   2.25e5  ; ultimate tensile strength\n    struct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8 ; 0.25*pi*r^4\n    struct pile property coupling-cohesion-shear 1.75e5 ...\n                         coupling-stiffness-shear 1.12e7\n    struct pile property coupling-cohesion-normal 1.75e5 ...\n                         coupling-stiffness-normal 1.12e7\n    struct pile property coupling-cohesion-table 'cct'\n    ; change in cohesion with relative shear displacement\n    table 'cct' add (0,1.75e5) (0.025,1.75e4)\n    ; Set up pull out test\n    struct node fix velocity-x range position-z 0.7\n    struct node initialize velocity-x 1e-6 local range position-z 0.7\n    call 'pileforce' suppress ; FISH function calculates reaction force on zones\n    ; Set up histories for monitoring model behavior\n    history interval 10\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-z position (0.2,0.2,0.7)\n    ; Achieve a total displacement of 4.0 cm\n    model cycle 40000\n    ;\n    model save 'pull-5'\n\n**Pull06.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of pull-test for grouted reinforcement\n    ;   using modified pile elements - Confinement 4 MPa\n    ; ==================================================================\n    model new\n    fish automatic-create off\n    [global t =  'Pull-test using modified pile elements - ']\n    [t += 'Confinement 4 MPa, fric=30']\n    model title [t]\n    ; Create a single rock block and set its material properties.\n    zone create brick size 4 4 6 point 1 (0.4,0,0) point 2 (0,0.4,0) ...\n                                 point 3 (0,0,0.6)\n    zone cmodel assign elastic\n    zone property bulk 5e9 shear 3e9\n    zone face apply velocity-normal 0.0 range position-z 0.6\n    model largestrain on\n    ; Create a pile element and assign properties\n    struct pile create by-line (0.2,0.2,0.1) (0.2,0.2,0.7) segments 12\n    struct pile property rockbolt-flag on\n    struct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                         perimeter 0.08\n    struct pile property tensile-yield   2.25e5  ; ultimate tensile strength\n    struct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8 ; 0.25*pi*r^4\n    struct pile property coupling-cohesion-shear 1.75e5 ...\n                         coupling-stiffness-shear 1.12e7\n    struct pile property coupling-cohesion-normal 1.75e5 ...\n                         coupling-stiffness-normal 1.12e7\n    struct pile property coupling-friction-shear 30.0\n    ; Install in situ stresses\n    zone initialize stress xx -4e6 yy -4e6\n    zone face apply stress-normal -4e6 range union position-x 0 position-x 0.4 ...\n                                                   position-y 0 position-y 0.4\n    ; Set up pull out test\n    struct node fix velocity-x range position-z 0.7\n    struct node init velocity-x 1e-6 local range position-z 0.7\n    call 'pileforce' suppress ; FISH function calculates reaction force on zones\n    ; Set up histories for monitoring model behavior\n    history interval 10\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-z position (0.2,0.2,0.7)\n    ; Achieve a total displacement of 4.0 cm\n    model cycle 40000\n    ;\n    model save 'pull-6'\n\n**Pull07.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of pull-test for grouted reinforcement\n    ;   using modified pile elements - Confinement 4 MPa (w/table)\n    ; ==================================================================\n    model new\n    fish automatic-create off\n    [global t =  'Pull-test using modified pile elements - ']\n    [t += 'Confinement 4 MPa (w/table)']\n    model title [t]\n    ; Create a single rock block and set its material properties.\n    zone create brick size 4 4 6 point 1 (0.4,0,0) point 2 (0,0.4,0) ...\n                                 point 3 (0,0,0.6)\n    zone cmodel assign elastic\n    zone property bulk 5e9 shear 3e9\n    zone face apply velocity-normal 0.0 range position-z 0.6\n    model largestrain on\n    ; Create a pile element and assign properties\n    struct pile create by-line (0.2,0.2,0.1) (0.2,0.2,0.7) segments 12\n    struct pile property rockbolt-flag on\n    struct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                         perimeter 0.08\n    struct pile property tensile-yield   2.25e5  ; ultimate tensile strength\n    struct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8 ; 0.25*pi*r^4\n    struct pile property coupling-cohesion-shear 1.75e5 ...\n                         coupling-stiffness-shear 1.12e7\n    struct pile property coupling-cohesion-normal 1.75e5 ...\n                         coupling-stiffness-normal 1.12e7\n    struct pile property coupling-friction-shear 30.0\n    ; define table for confining stress correction factor\n    table 'cct' add (0,0.5) (0.3,0.48) (0.5,0.45) (0.6,0.39) (0.68,0.36)\n    struct pile property coupling-confining-table 'cct'\n    ; note : (snn-szz)/(snn+szz) is 1 , so cfac=0.36\n    ; Install in situ stresses\n    zone initialize stress xx -4e6\n    zone face apply stress-normal -4e6 range union position-x 0 position-x 0.4 \n    ; Set up pull out test\n    struct node fix velocity-x range position-z 0.7\n    struct node initialize velocity-x 1e-6 local range position-z 0.7\n    call 'pileforce' suppress ; FISH function calculates reaction force on zones\n    ; Set up histories for monitoring model behavior\n    history interval 10\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-z position (0.2,0.2,0.7)\n    ; Achieve a total displacement of 4.0 cm\n    model cycle 40000\n    ;\n    model save 'pull-7'\n\n**Pull08.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of pull-test for grouted reinforcement\n    ;   using modified pile elements\n    ;     Definition of failure due to maximum tensile strain or stress\n    ; ==================================================================\n    model new\n    fish automatic-create off\n    [global t =  'Pull-test using modified pile elements - ']\n    [t += 'tensile strain causes rupture']\n    model title [t]\n    ; Create a single rock block and set its material properties\n    zone create brick size 4 4 6 point 1 (0.4,0,0) point 2 (0,0.4,0) ...\n                                 point 3 (0,0,0.6)\n    zone cmodel assign elastic\n    zone property bulk 5e9 shear 3e9\n    zone face apply velocity-normal 0.0 range position-z 0.6\n    model largestrain on\n    zone mech damping combined\n    ; Create a pile element and assign properties\n    struct pile create by-line (0.2,0.2,0.1) (0.2,0.2,0.7) segments 12\n    struct pile property rockbolt-flag on\n    struct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                         perimeter 0.08\n    struct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8 ; 0.25*pi*r^4\n    struct pile property coupling-cohesion-shear 1.75e5 ...\n                         coupling-stiffness-shear 1.12e7\n    struct pile property coupling-cohesion-normal 1.75e5 ...\n                         coupling-stiffness-normal 1.12e7\n    struct pile property coupling-friction-shear 30.0\n    struct pile property tensile-yield 1.5e5  ; ultimate tensile strength\n    struct pile property tensile-failure-strain 1.0e-4 ; ultimate tensile strain\n    ; Install in situ stresses\n    zone initialize stress xx -4e6 yy -4e6\n    zone face apply stress-normal -4e6 range union position-x 0 position-x 0.4 ...\n                                                   position-y 0 position-y 0.4\n    ; Set up pull out test\n    struct node fix velocity-x range position-z 0.7\n    struct node initialize velocity-x 1e-6 local range position-z 0.7\n    call 'pileforce' suppress ; FISH function calculates reaction force on zones\n    ; Set up histories for monitoring model behavior\n    history interval 10\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-z position (0.2,0.2,0.7)\n    ; Achieve a total displacement of 2.0 cm\n    model cycle 40000\n    ;\n    model save 'pull-8'\n\n**Shear01.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of shear test for a grouted bolt\n    ;   using modified pile elements\n    ; ==================================================================\n    model new\n    fish automatic-create off\n    model title 'Shear test using pile elements'\n    ; Create a single rock block and set its material properties\n    zone create brick size 3 3 6 point 1 (0.3,0,0) point 2 (0,0.3,0) ...\n                                 point 3 (0,0,0.6)\n    zone face skin ; Label the model boundaries\n    zone cmodel assign elastic\n    zone property bulk 5e10 shear 3e10 density 2000\n    zone face apply velocity-normal 0 range group 'Bottom'\n    zone face apply velocity-normal 0 range group 'East' or 'West'\n    zone face apply velocity-normal 0 range group 'North' or 'South'\n    model largestrain on\n    zone mechanical damping combined\n    ; Create a pile element and assign properties\n    struct pile create by-line (0.15,0.15,0.1) (0.15,0.15,0.628) segments 22\n    struct node group 'Top' range position-z 0.628 ; Tag the node at the top \n                                                   ; with a name\n    struct pile property rockbolt-flag on\n    struct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                         perimeter 0.08\n    ; ultimate tensile strength\n    struct pile property tensile-yield   2.25e5\n    struct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8\n    ;                         0.25*pi*r^4\n    struct pile property coupling-cohesion-shear 1.75e5 ...\n                         coupling-stiffness-shear 1.12e7\n    struct pile property coupling-cohesion-normal 1.75e8 ...\n                         coupling-stiffness-normal 1.0e9\n    struct pile property coupling-friction-shear 30.0\n    ; Set up shear test (need to fix local nodal axes at the top node, \n    ; to avoid axes rotating with element)\n    struct node fix system-local range group 'Top'\n    struct node initialize velocity-x 1e-6 local range group 'Top'\n    struct node fix velocity-x range group 'Top'\n    call 'shearforce' ; FISH function to calculate force on the grid\n    ; Set up histories for monitoring model behavior\n    history interval 100\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-x position (0.15,0.15,0.628)\n    ; Achieve a total displacement of 5.0 cm\n    model cycle 50000\n    ;\n    model save 'shear-1'\n\n**Shear02.f3dat**\n\n    ; ==================================================================\n    ;   Simulation of shear test for a grouted bolt\n    ;   using modified pile elements - Bending moment rupture\n    ; ==================================================================\n    model new\n    fish automatic-create off\n    model title 'Shear test using pile elements - Bending moment rupture'\n    ; Create a single rock block and set its material properties\n    zone create brick size 3 3 6 point 1 (0.3,0,0) point 2 (0,0.3,0) ...\n                                 point 3 (0,0,0.6)\n    zone face skin ; Label the model boundaries\n    zone cmodel assign elastic\n    zone property bulk 5e10 shear 3e10 density 2000\n    zone face apply velocity-normal 0 range group 'Bottom'\n    zone face apply velocity-normal 0 range group 'East' or 'West'\n    zone face apply velocity-normal 0 range group 'North' or 'South'\n    model largestrain on\n    zone mechanical damping combined\n    ; Create a pile element and assign properties\n    struct pile create by-line (0.15,0.15,0.1) (0.15,0.15,0.628) segments 22\n    struct node group 'Top' range position-z 0.628 ; Tag the node at the top\n                                                   ; with a name\n    struct pile property rockbolt-flag on\n    struct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                         perimeter 0.08\n    ; ultimate tensile strength\n    struct pile property tensile-yield   2.25e5\n    ; ultimate moment and tensile strength\n    struct pile property plastic-moment   5e3 tensile-failure-strain   1e-4\n    struct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8\n    ;                        0.25*pi*r^4\n    struct pile property coupling-cohesion-shear 1.75e5 ...\n                         coupling-stiffness-shear 1.12e7\n    struct pile property coupling-cohesion-normal 1.75e8 ... \n                         coupling-stiffness-normal 1.0e10\n    struct pile property coupling-friction-shear 30.0\n    ; Set up shear test (need to fix local nodal axes at the top node, \n    ; to avoid axes rotating with element)\n    struct node fix system-local range group 'Top'\n    struct node initialize velocity-x 1e-6 local range group 'Top'\n    struct node fix velocity-x range group 'Top'\n    call 'shearforce' ; FISH function to calculate force on the grid\n    ; Set up histories for monitoring model behavior\n    history interval 100\n    fish history name 'force' @force\n    struct node history name 'disp' displacement-x position (0.15,0.15,0.628)\n    ; Achieve a total displacement of 2.0 cm\n    warning off\n    model cycle 20000\n    ;\n    model save 'shear-2'"},{"path":"template.html","id":"template","chapter":"A 1. Template","heading":"A 1. Template","text":"","code":""},{"path":"template.html","id":"problem-description-2","chapter":"A 1. Template","heading":"A.1 Problem Description","text":"","code":""},{"path":"template.html","id":"modeling-procedure-1","chapter":"A 1. Template","heading":"A.2 Modeling Procedure","text":"","code":""},{"path":"template.html","id":"zonesgroups","chapter":"A 1. Template","heading":"A.3 Zones/Groups","text":"","code":""},{"path":"template.html","id":"properties-3","chapter":"A 1. Template","heading":"A.4 Properties","text":"","code":""},{"path":"template.html","id":"b.c.-and-i.c.-1","chapter":"A 1. Template","heading":"A.5 B.C. and I.C.","text":"","code":""},{"path":"template.html","id":"initial-equilibrium-3","chapter":"A 1. Template","heading":"A.6 Initial Equilibrium","text":"","code":""},{"path":"template.html","id":"alterations-3","chapter":"A 1. Template","heading":"A.7 Alterations","text":"","code":""},{"path":"template.html","id":"results-2","chapter":"A 1. Template","heading":"A.8 Results","text":"","code":""},{"path":"reference-collective.html","id":"reference-collective","chapter":"B Reference Collective","heading":"B Reference Collective","text":"","code":""},{"path":"reference-collective.html","id":"uplift-resistance-of-anchor-plate","chapter":"B Reference Collective","heading":"B.0.1 Uplift Resistance of Anchor Plate","text":"","code":""},{"path":"reference-collective.html","id":"before-1968","chapter":"B Reference Collective","heading":"B.0.1.1 Before 1968","text":"CoulombMohrKotter’s equationD.C. Drucker W. Prager 1951Balla 1961MorsMatsuo 1968Vesic","code":""},{"path":"reference-collective.html","id":"post-1968","chapter":"B Reference Collective","heading":"B.0.1.2 Post-1968","text":"Meyerhof, G.G., Adams, J.. 1968Meyerhof, G.G., Adams, J.. 1968Meyerhof, G.G. 1973Meyerhof, G.G. 1973Das, B.M., Seeley, G.R. 1975Das, B.M., Seeley, G.R. 1975Ovesen 1981Ovesen 1981Walters 1982Walters 1982Rowe, R.K., Davis, H. 1982Rowe, R.K., Davis, H. 1982Dickin, E.., Leung, C.F. 1983Dickin, E.., Leung, C.F. 1983Vermeer 1985Vermeer 1985Murray, E.J., Geddes, J.D. 1987Murray, E.J., Geddes, J.D. 1987Dickin, E.. 1988Dickin, E.. 1988Sutherland 1988Sutherland 1988Kulhawy 1988Kulhawy 1988Koutsabeloulis, N.C., Griffiths, D.V. 1989Koutsabeloulis, N.C., Griffiths, D.V. 1989Bouazza 1990Bouazza 1990Tadatsugu Tanaka, Toshinori Sakai 1993\n#### Post-2000Tadatsugu Tanaka, Toshinori Sakai 1993\n#### Post-2000Merifield, R.S., Sloan, S.W. 2006Merifield, R.S., Sloan, S.W. 2006Cheuk, White, Bolton 2008Cheuk, White, Bolton 2008Kumar 2008Kumar 2008V.B. Deshmukh 2011V.B. Deshmukh 2011Wu, Kouretzis, Suwal, Sloan 2019Wu, Kouretzis, Suwal, Sloan 2019","code":""},{"path":"reference-collective.html","id":"numerical-analysis","chapter":"B Reference Collective","heading":"B.0.2 Numerical Analysis","text":"D.V. Griffiths 1993Lyamin 2002Krabbenhoft, Lyamin, Sloan 2006J Kumar 2008Bobet 2010Ahmed M. Fahmy, John R. de Bruyn 2013Chong Tang, Kim-Chuan Toh, Kok-Kwang Phoon, 2014Arya Das, Ashis Kumar Bera 2019","code":""},{"path":"reference-collective.html","id":"standards","chapter":"B Reference Collective","heading":"B.0.3 Standards","text":"IEEE 2001EPRI TR-105206 1995DS 1110, DS 1111 2013","code":""},{"path":"reference-collective.html","id":"textbook","chapter":"B Reference Collective","heading":"B.0.4 Textbook","text":"R. Hill Mathematical Theory Plasticity 1950W.F. Chen Limit Analysis Soil Plasticity 1975W.F. Chen Limit Analysis Soil Mechanics 1990David M. Potts, Lidija Zdravkovic FSAFEM book 1, FEA Geotechnical Engineering 1999Das, B. M. Earth Anchors 2013","code":""},{"path":"reference-collective.html","id":"ph.d-thesis","chapter":"B Reference Collective","heading":"B.0.5 Ph.D Thesis","text":"Charles Hughey Evans 1983M.O. Fadl 1981Peter Jay Bosscher 1981Abdelmalek Bouazza 1990D.V. Griffiths 1993Ahmed Mohmed Ebid 2004Shentang Wang 2006Vivek Balwantrao Deshmukh 2010Frederick Levy 2014Jeremy Bleyer 2016","code":""},{"path":"reference-collective.html","id":"awarded-lectures","chapter":"B Reference Collective","heading":"B.0.6 Awarded Lectures","text":"SloanHoulsbySutherland","code":""}]
