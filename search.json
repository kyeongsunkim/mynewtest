[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"bs4 output mytemplate R Markdown, using bookdown R package.\npurpose gitbook extend capability organizing codes learnt FLAC3D manual.\nPDF file, click cover image.\nWord file, click .\nGitbook file, email kyeongsunkim@snu.ac.kr.\n::::::::: {.byline}\nKyeong Sun Kim\nSeptember 2021\nSeoul National University:::","code":""},{"path":"kaist-model.html","id":"kaist-model","chapter":"1 KAIST Model","heading":"1 KAIST Model","text":"","code":""},{"path":"kaist-model.html","id":"initial-configuration","chapter":"1 KAIST Model","heading":"1.1 Initial Configuration","text":"","code":"import itasca as it\nimport numpy as np\nnp.set_printoptions(threshold=20)\nit.command(\"python-reset-state false\")\nfrom itasca import zonearray as za\nfrom itasca import gridpointarray as gpa"},{"path":"kaist-model.html","id":"zones","chapter":"1 KAIST Model","heading":"1.2 Zones","text":"","code":"model new\nzone create radial-cylinder point 0 (0,0,0) ...\n                            point 1 (40,0,0) ...\n                            point 2 (0,10,0) ...\n                            point 3 (0,0,40) ...\n                            point 4 (40,10,0) ...\n                            point 5 (0,10,40) ...\n                            point 6 (40,0,40) ...\n                            point 7 (40,10,40) ...\n                            point 8 (1,0,0) ...\n                            point 9 (0,0,1) ...\n                            point 10 (1,10,0) ...\n                            point 11 (0,10,1) ...\n                            size 10 20 26 40 ...\n                            rat 1 1 1 1.5 ...\n                            fill group \"shaft\"\n\nzone group \"plate\" range position-x 0 3.2 position-y 8.5 10 position-z 0 3.2"},{"path":"kaist-model.html","id":"group","chapter":"1 KAIST Model","heading":"1.3 Group","text":"","code":"zone group \"plate\" range position-x 0 3.2 position-y 8.5 10 position-z 0 3.2"},{"path":"kaist-model.html","id":"constitutive-model","chapter":"1 KAIST Model","heading":"1.4 Constitutive Model","text":"#Constitutive model properties shaft plate\nzone cmodel assign elastic range group ‘shaft’\nzone property bulk 8.333e7 shear 3.846e7 range group ‘shaft’\nzone cmodel assign elastic range group ‘plate’\nzone property bulk 8.333e7 shear 3.846e7 range group ‘plate’","code":"#Constitutive model and properties for soil\nzone cmodel assign strain-softening range group \"Radial Cylinder1\"\nzone property density 2500 bulk 2e8 shear 1e8 range group \"Radial Cylinder1\"\nzone property cohesion 2e6 friction 45 tension 2e5 dilation 10 range group \"Radial Cylinder1\"\nzone property table-friction 'fri' table-cohesion 'coh' table-dilation 'dil' range group \"Radial Cylinder1\"\ntable 'fri' add (0, 45) (.05, 42) (.1, 40) (1, 40)\ntable 'coh' add (0,2e6) (.05,1e6) (.1,5e5) (1,5e5) \ntable 'dil' add (0, 10) (.05,  3) (.1,  0) \n<img src=\"myfigureeeeee/d.PNG\" width=\"100%\" />\n\n## Soil-Structure Interface\n\n## Boundary Conditions\n\n## Initial Equilibrium\n\n## Alterations\n\n## Results\n\n\n<!--------------------------------------------------->\n<!--------------------------------------------------->\n<!--------------------------------------------------->\n\\newpage\n\n# Axial Concrete Pile\n\n\n## Problem Description\n### Problem Statement\nThe pile is subjected to an axial load of 100 kN,\nand then the top of the pile is moved horizontally for a displacement of 4 cm.\nThe goal is to determine relation of axial loading to the ultimate bearing capacity.\nAnd, lateral load-deflection curve is calculated.\n\n1) origin at the top of the pile, z upward.\n2) z=0: free surface\n3) z=-8: fixed in z-eirection\n4) x=+8, -8, y = 8: roller\n5) skin friction is modeled by placing an interface\nbetween pile concrete wall and clay.\nIn it, fric angle of 20 and c=30kPa are assumed.\n6) toe interface is placed between pile tip and clay\n*note: Zone faces are separated in a previous command so that the gridpoints common to both will be separated as well.* \\\n*note: include Figure of grid (geometry)*\n\n### Main Parameters\nDiameter = 0.6 m \\\nLength = 5  \\\nClay \\\nGWT = 5.5m \\\n\n## Modeling Procedure\n1) equil. stress state under gravity load before install. \\\n1-1) water table is created at z=5.5 \\\n1-2) wet density of clay is assigned below this water table. \\\n2) equil. stress state after installation. \\\n2-1) change properties of pile zones from those  \\\nrepresenting clay to those representing concrete. \\\n2-2) vertical equil. stress distribution at this equil. state is shown in \\\n*note: include Figure of contours of vertical stress at ini state incld. pile weight* \\\n3) apply vertical velocity at top of pile \\\n\"ramp\" = boundary condition is increased linearly \\\n*note: critical timestep is controlled by high stiffness of concrete* \\\nIf velocity is sudden, inertial effects will dominate and renders difficulty to identification of steady state response of system \\\ntable \"ramp\" is used to apply velocity to pile top gridpoints. \\\n*note: FISH FUNCTION vert_load calculates axial stress at the top of pile and stores value as a history* \\\nFor efficiency, gridpoints on cap surface are stored in symbol \"cap\" as a map \\\n*note: include plot of axial stress vs axial displ. at pile toe. ramp = (0,5e-8), step number = 30000* \\\n*note: combined damping is used to remove kinetic energy for prescribed loading condition. This is because mass-adjustment process depends on velocity sign-changes..* \\\n*note: FISH FUNCTION tot_reac monitors soil reaction along pile as a func of lateral displ. tot_reac creates tables of soil reaction (p) vs. lateral displ (y) at diff. locations along pile to generate p-y curve.* \\\n*note: include Figure of p-y curve at 11 equidistant points along pile* \\\n\n## Zones\n\n```python\nmodel new\nmodel title 'Axial and lateral loading of a concrete pile'\n; create grid interactively from the extruder tool, \n; exported to geometry.f3dat from State Record pane.\ncall 'geometry' suppress\nzone generate from-extruder\n; Reflect the grid to get a 1/2 space instead of a 1/4 space\nzone reflect dip-direction 270 dip 90"},{"path":"kaist-model.html","id":"groups","chapter":"1 KAIST Model","heading":"1.5 Groups","text":"","code":"; Name intersections of things named in the two extruder views\nzone group 'clay' range group 'clay-c' or 'clay-s' or 'wetclay-s'\nzone group 'pile' range group 'pile-c' group 'pile-s' or 'remove-s'\nzone group 'remove' range group 'remove-s' group 'pile-c' not ; \nzone face group 'wall' internal range group 'wall-c' group 'pile'\nzone face group 'base' internal range group 'base-s' group 'pile'\nzone face skin ; Name far field boundaries\n; Delete the area marked for removal\nzone delete range group 'remove'\n;\n; setup interfaces\n; separate using zone separate\n; all at once so common nodes are separated\nzone separate by-face new-side group 'iwall' slot 'int' ...\n     range group 'wall' or 'base'\n; Want two different interfaces for proper normal direction at corner\nzone interface 'side' create by-face range group 'wall' and 'iwall'\nzone interface 'base' create by-face range group 'base' and 'iwall'\n; Save initial geometric state\nmodel save 'geometry'"},{"path":"kaist-model.html","id":"properties","chapter":"1 KAIST Model","heading":"1.6 Properties","text":"","code":"; Initialize gravity, pore-pressures, density, and stres state\nmodel gravity 10\n; water table information\nzone water density 1000\nzone water plane origin (0,0,-5.5) normal (0,0,-1)\nzone initialize density 1230\nzone initialize density 1550 range group 'wetclay-s' ; Wet density\n; assign properties to the soil and interfaces - temporarily remove pile cap\nzone cmodel assign mohr-coulomb ...\n     range group 'clay'\nzone property bulk 8.333e7  shear 3.846e7  cohesion 30000 fric 0 ...\n     range group 'clay'\nzone cmodel assign elastic                 range group 'pile'\nzone property bulk 8.333e7  shear 3.846e7  range group 'pile'\nzone cmodel assign null                    range group 'remove-s'\nzone interface 'side' node property stiffness-normal 1e8 ...\n                           stiffness-shear 1e8 friction 20 cohesion 30000\nzone interface 'base' node property stiffness-normal 1e8 ...\n                           stiffness-shear 1e8 friction 20 cohesion 30000"},{"path":"kaist-model.html","id":"b.c.-and-i.c.","chapter":"1 KAIST Model","heading":"1.7 B.C. and I.C.","text":"","code":"; boundary and initial stress conditions\nzone face apply velocity-normal 0 range group 'Bottom'\nzone face apply velocity-normal 0 range group 'East' or 'West'\nzone face apply velocity-normal 0 range group 'North' or 'South'\nzone initialize-stress ratio 0.4286\nzone interface 'side' node initialize-stresses\nzone interface 'base' node initialize-stresses"},{"path":"kaist-model.html","id":"initial-equilibrium","chapter":"1 KAIST Model","heading":"1.8 Initial Equilibrium","text":"","code":"; Solve to initial equilibrium\nzone ratio local\nmodel solve ratio 1e-4\nmodel save 'initial'"},{"path":"kaist-model.html","id":"alterations","chapter":"1 KAIST Model","heading":"1.9 Alterations","text":"","code":""},{"path":"kaist-model.html","id":"install-the-pile","chapter":"1 KAIST Model","heading":"1.9.1 install the pile","text":"","code":"; install the pile\nmodel restore 'initial'\nzone cmodel assign elastic                          range group 'pile'\nzone property bulk 13.9e9 shear 10.4e9 density 2500 range group 'pile'\nmodel solve ratio 1e-4\nmodel save 'install'"},{"path":"kaist-model.html","id":"vertical-loading","chapter":"1 KAIST Model","heading":"1.9.2 vertical loading","text":"","code":"; vertical loading\nzone initialize state 0\nzone gridpoint initialize displacement (0,0,0)\nzone gridpoint initialize velocity     (0,0,0) \ntable 'ramp' add ([global.step],0) ([global.step+30000],-5e-8) ...\n      ([global.step+58000],-5e-8) ; Increase velocity applied to pile\n                                  ; over 30,000 steps\nzone face apply velocity-normal 1 table 'ramp' range group 'Top'\nhistory interval 250\nzone history name 'disp' displacement-z position (0,0,0)\ncall 'load'\nfish history name 'load' @vert_load\nzone mechanical damping combined\nmodel step 58000\nmodel save 'vertical-loading'"},{"path":"kaist-model.html","id":"vertical-then-lateral-loading","chapter":"1 KAIST Model","heading":"1.9.3 vertical then lateral loading","text":"","code":"; vertical loading then lateral loading\nmodel restore 'install'\nzone initialize state 0\nzone gridpoint initialize displacement (0,0,0)\nzone gridpoint initialize velocity     (0,0,0) \nzone face apply stress-zz [-1.0e5/(math.pi*0.3*0.3)] range group 'Top'\nmodel solve ratio 1e-4\nmodel save 'lateral-load-start'\n\n; apply lateral loading as x-velocity on cap\nzone initialize state 0\nzone gridpoint initialize displacement (0,0,0)\nzone gridpoint initialize velocity     (0,0,0) \nzone face apply velocity-x 1e-7 range group 'Top'\nzone history name 'disp' displacement-x position 0,0,0\ncall 'p-y' suppress ; Calculates p-y curve for pile, when tot_reac is called\n@make_pydata        ; Generate p-y curve calculation data \n@output_structure   ; Sanity check of p-y curve data \nfish history name 'load' @tot_reac\nmodel step 416500\nmodel save 'lateral-load'"},{"path":"pull-tests.html","id":"pull-tests","chapter":"2 Pull-Tests","heading":"2 Pull-Tests","text":"","code":""},{"path":"pull-tests.html","id":"problem-description","chapter":"2 Pull-Tests","heading":"2.1 Problem Description","text":"note: FISH function force used sum raction forces monitor nodal displacement generated pull-testnote: free length bolt extends block + larger diameter\nPerfectly plastic behavior grout = max cohesion exceeded +post-peak weakening shear bond strengthnote: bond strength softening grout defined keyword coupling-cohesion-table (see Rockbolt Behavior)\nrelation btw shear disp. cohesion weakening prescribed\nthru table cct. softening friction grout canbe defined using keyword coupling-friction-table.","code":""},{"path":"pull-tests.html","id":"zones-1","chapter":"2 Pull-Tests","heading":"2.2 Zones","text":"","code":"; ==================================================================\n;   Simulation of pull-test for grouted reinforcement\n;   using modified pile elements - Softening of cohesion\n; ==================================================================\nmodel new \nfish automatic-create off\nmodel title 'Pull-test using modified pile elements - cohesion softening'\n; Create a single rock block and set its material properties.\nzone create brick size 4 4 6 point 1 (0.4,0,0) point 2 (0,0.4,0) ...\n                             point 3 (0,0,0.6)"},{"path":"pull-tests.html","id":"properties-1","chapter":"2 Pull-Tests","heading":"2.3 Properties","text":"","code":"zone cmodel assign elastic\nzone property bulk 5e9 shear 3e9\nzone face apply velocity-normal 0.0 range position-z 0.6\n; Create a pile element and assign properties\nstruct pile create by-line (0.2,0.2,0.1) (0.2,0.2,0.7) segments 12\nstruct pile property rockbolt-flag on\nstruct pile property young 200e9 poisson 0.25 cross-sectional-area 5e-4 ...\n                     perimeter 0.08\nstruct pile property tensile-yield   2.25e5  ; ultimate tensile strength\nstruct pile property moi-y 2.0e-8 moi-z 2.0e-8 moi-polar 4.0e-8 ; 0.25*pi*r^4\nstruct pile property coupling-cohesion-shear 1.75e5 ...\n                     coupling-stiffness-shear 1.12e7\nstruct pile property coupling-cohesion-normal 1.75e5 ...\n                     coupling-stiffness-normal 1.12e7\nstruct pile property coupling-cohesion-table 'cct'\n; change in cohesion with relative shear displacement\ntable 'cct' add (0,1.75e5) (0.025,1.75e4)"},{"path":"pull-tests.html","id":"initial-equilibrium-1","chapter":"2 Pull-Tests","heading":"2.4 Initial Equilibrium","text":"","code":"struct node fix velocity-x range position-z 0.7\nstruct node initialize velocity-x 1e-6 local range position-z 0.7\ncall 'pileforce' suppress ; FISH function calculates reaction force on zones"},{"path":"pull-tests.html","id":"alterations-1","chapter":"2 Pull-Tests","heading":"2.5 Alterations","text":"","code":"; Set up histories for monitoring model behavior\nhistory interval 10\nfish history name 'force' @force\nstruct node history name 'disp' displacement-z position (0.2,0.2,0.7)\n; Achieve a total displacement of 4.0 cm\nmodel cycle 40000\n;\nmodel save 'pull-5'"},{"path":"pull-tests.html","id":"some-other-notes","chapter":"2 Pull-Tests","heading":"2.6 Some other notes","text":"2.3. pull test confinement “Pulltest06.f3dat”\n+modified pile logic.(see Behavior Shear Coupling Springs) linear law implemented.whereby reinforcement shear strength defined constant(coupling-cohesion-shear)+ effective pressureperimeterfric angle(coupling-friction-shear)\npressure dependence activated automatically issuing reinforcement properties(perimeter) and2.5. pull test tensile rupture “Pulltest08.f3dat”\nnote: tensile-yield, tensile-failure-strain: limiting axial yield force limiting axial strain rockbolt","code":""},{"path":"grid.html","id":"grid","chapter":"3 Grid","heading":"3 Grid","text":"","code":""},{"path":"grid.html","id":"primitive-shapes","chapter":"3 Grid","heading":"3.1 Primitive Shapes","text":"note: zone create generates primitive gridnote: zone gridpoint create puts gridpoints specific locations note: zone gridpoint merge ensures separate primitives connected properlynote: zone attach connects primitive meshes different zone sizes.ex) 5 along innder radius cylindrical tunnel,\n10 along axis\n6 along circumference tunnel\n12 periphery tunnel outer boundary modelnote: size keyword defines number zones grid.keywords zone create:\n- dimension\n- edge\n- fill\n- point (boundary dimensions)\n- ratio (coarser toward edge)\n- size","code":"zone create radial-cylinder size 5 10 6 12 fill\nzone create radial-cylinder size 5 10 6 12 ratio 1 1 1 5\neach size is controlled by a ratio (geometric ratio of 1.2 times preceding zone)"},{"path":"grid.html","id":"several-primitive-shapes-connected","chapter":"3 Grid","heading":"3.2 several primitive shapes connected:","text":"adds symmetric part.note: symmetry plane vertical plane (located dip, dip-direction, origin keywords) coincident x = 0 plane. Note dip angle (dip) dip direction (dip-direction) assume x corresponds “East,” y “North,” z “.”third option, zone gridpoint create command, available position single points model region.note: zone gridpoint create used positioning reference points primitives execution zone create command, check made boundary gridpoint boundary gridpoints zones already exist.\ntwo boundary gridpoints fall within tolerance 1 ? 10-7 (relative magnitude gridpoints position vector) , assumed point,\ndiscovered gridpoints don’t match, zone gridpoint merge command can used merge gridpoints zone create command applied.Example: (zone attach) - Two unequal sub-gridsExample: (zone densify)first two command lines can changed \nzone densify segments 2 refines upper zones (z-coordinate 2 4) segment number 2 edge.","code":"zone create radial-cylinder size 5 10 6 12 rat 1 1 1 1.2 ...\n                           point 0 (0,0,0) point 1 (100,0,0) ...\n                           point 2 (0,200,0) point 3 (0,0,100)\nzone create radial-tunnel size 5 10 5 12 rat 1 1 1 1.2 ...\n                          point 0 (0,0,0) point 1 (0,0,-100) ...\n                          point 2 (0,200,0) point 3 (100,0,0)\n; here, model boundary dimensions are 100, 200, 100\n; boundary coord are defined using point keyword\n\nzone reflect dip 90 dip-direction 270 origin (0,0,0) zone create brick size 4 4 2 point 0 (0,0,0) point 1 (4,0,0) ...\n                             point 2 (0,4,0) point 3 (0,0,2)\nzone create brick size 8 8 4 point 0 (0,0,2) point 1 (4,0,2) ...\n                             point 2 (0,4,2) point 3 (0,0,4)\nzone attach by-face range position-z 2zone create brick size 4 4 4\nzone densify segments 2 range position-x 2 4"},{"path":"grid.html","id":"structural-element-operation","chapter":"3 Grid","heading":"3.3 Structural Element Operation","text":"Creating liner service tunnelThe liner contains 240 structural shell elements connected FLAC3D grid 143 structural-node links. grid liner shown .","code":"; liner\nstructure shell create by-face range cylinder ...\n                                     end-1 (0,0,-1) end-2 (0,50,-1) ...\n                                     radius 3"},{"path":"grid.html","id":"densifying-grid-by-specifying-max-size-length","chapter":"3 Grid","heading":"3.4 Densifying grid by specifying max size length","text":"note local z-direction, maximum size length 0.4. FLAC3D densifies maximum length direction 1/3 (= 0.4)\nzone attach -face command example used attach faces sub-grids together rigidly form single gridAlways use zone attach -face command zone densify command different numbers gridpoints along faces different zones.","code":"model new\nzone create brick size 4 4 4\nplot 'Brick' export bitmap filename 'densify3.png'\n;\nzone densify local maximum-length (0.5,0.5,0.4) range position-z 2 4\nzone attach by-face\n;\nplot 'Brick' export bitmap filename 'densify4.png'"},{"path":"grid.html","id":"densify-a-grid-using-geometric-information","chapter":"3 Grid","heading":"3.4.1 Densify a grid using geometric information","text":"","code":"model new\nzone create brick size 10 10 10\n;\ngeometry set \"setA\" polygon create ...\n                    by-positions (0,0,1) ( 5,0, 1) ( 5,10, 1) (0,10,1)\ngeometry set \"setA\" polygon create ...\n                    by-positions (5,0,1) (10,0, 5) (10,10, 5) (5,10,1)\ngeometry set \"setB\" polygon create ...\n                    by-positions (0,0,5) ( 5,0, 5) ( 5,10, 5) (0,10,5)\ngeometry set \"setB\" polygon create ...\n                    by-positions (5,0,5) (10,0,10) (10,10,10) (5,10,5)\nplot 'Brick2' export bitmap filename 'densify5.png'\n\nzone densify segments 2 range geometry-space \"setA\" set \"setB\" count 1\nzone attach by-face\n;\nplot 'Brick2' export bitmap filename 'densify6.png'"},{"path":"python-with-flac3d.html","id":"python-with-flac3d","chapter":"4 Python with FLAC3D","heading":"4 Python with FLAC3D","text":"","code":""},{"path":"python-with-flac3d.html","id":"introduction","chapter":"4 Python with FLAC3D","heading":"4.1 Introduction","text":"","code":"import itasca as it\nit.command(\"python-reset-state false\")\nit.command(\"\"\"\nmodel new\nzone create brick size 10 10 10\nzone cmodel assign elastic\nzone property density 2950 young 12e9 poisson 0.25\ncycle 1\n\"\"\")\nit.zone.count()\nz=it.zone.find(1)\nprint z\nz.pos()\nvolume_sum = 0.0\nfor z in it.zone.list():\n  volume_sum += z.vol()\n\nprint volume_sum\nprint z.vol() * it.zone.count()\nassert volume_sum == z.vol() * it.zone.count()\n\nz = it.zone.near ((5,5,5))\nz.pos()"},{"path":"python-with-flac3d.html","id":"zones-2","chapter":"4 Python with FLAC3D","heading":"4.2 Zones","text":"","code":"it.zone.count() # 1000\nz = it.zone.find(1)\nfor z in it.zone.list():\n  z = it.zone.near((5,5,5))\nz.pos()\nz.vol()"},{"path":"python-with-flac3d.html","id":"properties-2","chapter":"4 Python with FLAC3D","heading":"4.3 Properties","text":"","code":"z.props() or z.props()['bulk']\nz.prop('shear')\nz.set_prop('bulk', 8.5e9)"},{"path":"python-with-flac3d.html","id":"gridpoints","chapter":"4 Python with FLAC3D","heading":"4.4 Gridpoints","text":"","code":"gp = it.gridpoint.near((2,2,2))\nfor gp in it.gridpoint.list():\n  total_mass = gp.mass_gravity()\nz.vol()*z.density()*1000"},{"path":"python-with-flac3d.html","id":"structural-elements","chapter":"4 Python with FLAC3D","heading":"4.5 Structural Elements","text":"","code":"it.structure.list()\nit.structure.find(1)\nit.structure.near((0,2,2))\nit.structure.node.find(1)\ns_node.links()[0]"},{"path":"python-with-flac3d.html","id":"extra-variables","chapter":"4 Python with FLAC3D","heading":"4.6 Extra Variables","text":"","code":"z.set_extra(1, 1.23)\nz.set_extra(2, \"a test string\")\nz.set_extra(1, gp.pos())"},{"path":"python-with-flac3d.html","id":"groups-and-b.c.","chapter":"4 Python with FLAC3D","heading":"4.7 Groups and B.C.","text":"","code":"if z.group(\"default\") == \"lower\":\n  gp.set_fix(0, True)\n  gp.set_fix(1, True)\n  gp.set_force_load((1e6,2e6,1e6))\nit.zone.near((5,5,5)).stress()\nit.zone.near((5,5,5)).strain()\n\"\"\""},{"path":"python-with-flac3d.html","id":"parameteric-studies","chapter":"4 Python with FLAC3D","heading":"4.8 Parameteric Studies","text":"","code":"\"*note: for modulus in [6e9, 8e9, 10e9, 12e9]:\"\nit.command(\"\"\"\nmodel restore 'before_cycling'\nzone prop young {}\nmodel solve\n\"\"\".format(modulus))\nvertical_disp = it.gridpoint.near((5,5,10)).disp_z()\nprint \"~~~\".format(modulus,vertical_disp)"},{"path":"python-with-flac3d.html","id":"setting-fish-variables","chapter":"4 Python with FLAC3D","heading":"4.9 Setting FISH variables","text":"","code":"import itasca as it\nit.command('python-reset-state false')\nit.fish.set('x', 10)\nx = it.fish.get('x') yields 10"},{"path":"python-with-flac3d.html","id":"issuing-command","chapter":"4 Python with FLAC3D","heading":"4.9.1 Issuing Command","text":"","code":"import itasca as it\nimport numpy as np\ndata = np.loadtext('brick-data.txt')\ncommand_template = ;;; \nzone create brick\nzone cmodel assign elastic\nzone property density {density} young {young} poisson {poisson}\n;;;\ndensity = data[0]\nyoung = data[1]\npoisson = data[2]\n\ncommand = command_template.format(density=density, young=young, poisson=poisson)\nit.command(command)"},{"path":"python-with-flac3d.html","id":"string","chapter":"4 Python with FLAC3D","heading":"4.10 String","text":"","code":"\"The value of x is {:.2f}\".format(0.3872)\n\"The value of x is {:.2e}\".format(0.3872)\n\"My name is Sasha\"\n\"My name is {}\".format(\"Sasha\")\n\"My name is {name}\".format(name=\"Sasha\")"},{"path":"python-with-flac3d.html","id":"kaist-model-code","chapter":"4 Python with FLAC3D","heading":"4.11 KAIST Model Code","text":"","code":"import itasca as it\nimport numpy as np\nnp.set_printoptions(threshold=20)\nit.command(\"python-reset-state false\")\nfrom itasca import zonearray as za\nfrom itasca import gridpointarray as gpa\n\" =========================================== \"\n\" =============GRID GENERATION=============== \"\n\" =========================================== \"\n#\nit.command(\"\"\"\nmodel new\nzone create radial-cylinder point 0 (0,0,0) ...\n                            point 1 (40,0,0) ...\n                            point 2 (0,10,0) ...\n                            point 3 (0,0,40) ...\n                            point 4 (40,10,0) ...\n                            point 5 (0,10,40) ...\n                            point 6 (40,0,40) ...\n                            point 7 (40,10,40) ...\n                            point 8 (1,0,0) ...\n                            point 9 (0,0,1) ...\n                            point 10 (1,10,0) ...\n                            point 11 (0,10,1) ...\n                            size 10 20 26 40 ...\n                            rat 1 1 1 1.5 ...\n                            fill group \"shaft\"\nzone group \"plate\" range position-x 0 3.2 position-y 8.5 10 position-z 0 3.2\n\"\"\")\n\n\" =========================================== \"\n\" ============GROUPS AND MASKS=============== \"\n\" =========================================== \"\n\n\" GROUPS AND MASK ARRAYS \"\nit.command(\"zone group \\\"lower\\\" range position-z 0 5\")\nza.in_group(\"lower\")\nza.in_group(\"lower\").sum(), \"zones in lower group.\"\ncorner_mask = reduce(np.logical_and, (x<3, y<3, z<3))\nza.set_group(corner_mask, \"corner\", \"geometry\")\nprint za.in_group(\"corner\", \"geometry\").sum(), \"zones in corner group.\"\n\n\" GRIDPOINTS ARRAY FUNCTIONS \"\ngpos = gpa.pos()\ngx, gy, gz = gpos.T\nprint gz\nf = gpa.fixity()\nprint f\nf[:,][gz==0] = True, True, True\nprint f\ngpa.set_fixity(f)\n\ntop_gridpoints = gz==10\nradial_distance = np.sqrt((gx-5)**2+(gy-5)**2)\ncentral_gridpoints = radial_distance < 5\nmask = np.logical_and(top_gridpoints, central_gridpoints)\nprint \"boundary load applied to {} gridpoints\".format(mask.sum())\nfapp = gpa.force_app()\nprint fapp\nfapp[:,2] = mask*1e6*(5.0-radial_distance)/5.0\ngpa.set_force_app(fapp)\n\n\nprint \"zone centroids: \"\nprint za.pos()\nza.gridpoints()\nza.faces()\nza.ids()\nprint za.neighbors()\n\n\n\n\" =========================================== \"\n\" ===============PROPERTIES================== \"\n\" =========================================== \"\n\nit.command(\"\"\"\nzone cmodel assign elastic\nzone property density 2950 young 12e9 poisson 0.25\ncycle 1\n\"\"\")\n\n\n\" =========================================== \"\n\" ==========BOUNDARY CONDITIONS============== \"\n\" =========================================== \"\n\n\n\n\n\" =========================================== \"\n\" =================RESULTS=================== \"\n\" =========================================== \"\n\nit.command(\"model solve\")\nprint \"gridpoint displacements:\"\nprint gpa.disp()\nprint \"gridpoint displacement magnitudes: \"\nmag = np.linalg.norm(gpa.disp(), axis=1)\nprint mag\nmax_index = np.argmax(mag)\nprint \"Maximum displacement: {} at location {}\".format(gpa.disp()[max_index],\n                                              gpa.pos()[max_index])\n\nprint \"Vertical displacement along the vertical line x=5, y=5: from z=0 to z=10\"\nprint gpa.disp()[np.logical_and(gx==5, gy==5)][:,2]\n\nza.stress()\n\nza.stress_flat()\n\n\n\" =========================================== \"\n\" =========REFERENCE EXAMPLES================ \"\n\" =========================================== \"\n\n\n\"\"\" Some Numpy Operation Examples\nnp.array([1,2,3,4,5])\nnp.linspace(0,1,15)\nnp.zeros((4,4))\na = np.linspace(0,1,15)\nb = np.ones_like(a)\nnp.sin(a)\nprint a[0]\na[0] = 20.2\nprint a\nc = np.array(((1,2,3),(4,5,6),(7,8,9),(10,11,12)))\nprint c\nc[0][0]\nc[:,0]\n\"\"\"\n\"\"\" SOME GRIDPOINTS EXAMPLES\nz = it.zone.near((5,5,5))\nprint \"central zone id: {}, position: {}\".format(z.id(), z.pos())\n\nfor gp in z.gridpoints():\n    print \"gridpoint with id: {} at {}\".format(gp.id(), gp.pos())\n\"\"\""},{"path":"template.html","id":"template","chapter":"A 1. Template","heading":"A 1. Template","text":"","code":""},{"path":"template.html","id":"problem-description-1","chapter":"A 1. Template","heading":"A.1 Problem Description","text":"","code":""},{"path":"template.html","id":"modeling-procedure","chapter":"A 1. Template","heading":"A.2 Modeling Procedure","text":"","code":""},{"path":"template.html","id":"zonesgroups","chapter":"A 1. Template","heading":"A.3 Zones/Groups","text":"","code":""},{"path":"template.html","id":"properties-3","chapter":"A 1. Template","heading":"A.4 Properties","text":"","code":""},{"path":"template.html","id":"b.c.-and-i.c.-1","chapter":"A 1. Template","heading":"A.5 B.C. and I.C.","text":"","code":""},{"path":"template.html","id":"initial-equilibrium-2","chapter":"A 1. Template","heading":"A.6 Initial Equilibrium","text":"","code":""},{"path":"template.html","id":"alterations-2","chapter":"A 1. Template","heading":"A.7 Alterations","text":"","code":""},{"path":"template.html","id":"results","chapter":"A 1. Template","heading":"A.8 Results","text":"","code":""},{"path":"reference-collective.html","id":"reference-collective","chapter":"B Reference Collective","heading":"B Reference Collective","text":"","code":""},{"path":"reference-collective.html","id":"uplift-resistance-of-anchor-plate","chapter":"B Reference Collective","heading":"B.0.1 Uplift Resistance of Anchor Plate","text":"","code":""},{"path":"reference-collective.html","id":"before-1968","chapter":"B Reference Collective","heading":"B.0.1.1 Before 1968","text":"CoulombMohrKotter’s equationBalla (1961)MorsMatsuo","code":""},{"path":"reference-collective.html","id":"post-1968","chapter":"B Reference Collective","heading":"B.0.1.2 Post-1968","text":"Meyerhof, G.G., Adams, J.. 1968Meyerhof, G.G. 1973Das, B.M., Seeley, G.R. 1975Rowe, R.K., Davis, H. 1982Dickin, E.., Leung, C.F. 1983Murray, E.J., Geddes, J.D. 1987Dickin, E.. 1988Koutsabeloulis, N.C., Griffiths, D.V. 1989\n#### Post-2000Merifield, R.S., Sloan, S.W. 2006","code":""},{"path":"reference-collective.html","id":"numerical-analysis","chapter":"B Reference Collective","heading":"B.0.2 Numerical Analysis","text":"","code":""},{"path":"reference-collective.html","id":"standards","chapter":"B Reference Collective","heading":"B.0.3 Standards","text":"IEEE 2001DS 1110, DS 1111","code":""},{"path":"reference-collective.html","id":"textbook","chapter":"B Reference Collective","heading":"B.0.4 Textbook","text":"Das, B. M. 2013. Earth Anchors","code":""},{"path":"reference-collective.html","id":"ph.d-thesis","chapter":"B Reference Collective","heading":"B.0.5 Ph.D Thesis","text":"","code":""},{"path":"reference-collective.html","id":"award-lecture","chapter":"B Reference Collective","heading":"B.0.6 Award Lecture","text":"","code":""}]
